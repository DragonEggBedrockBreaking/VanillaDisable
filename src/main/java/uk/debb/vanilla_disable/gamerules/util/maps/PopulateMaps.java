package uk.debb.vanilla_disable.gamerules.util.maps;

import it.unimi.dsi.fastutil.objects.ObjectObjectImmutablePair;
import net.minecraft.core.Registry;
import net.minecraft.core.registries.BuiltInRegistries;
import net.minecraft.core.registries.Registries;
import net.minecraft.data.worldgen.placement.*;
import net.minecraft.world.effect.MobEffects;
import net.minecraft.world.entity.GlowSquid;
import net.minecraft.world.entity.MobCategory;
import net.minecraft.world.entity.ai.goal.*;
import net.minecraft.world.entity.ambient.AmbientCreature;
import net.minecraft.world.entity.ambient.Bat;
import net.minecraft.world.entity.animal.*;
import net.minecraft.world.entity.animal.allay.Allay;
import net.minecraft.world.entity.animal.axolotl.Axolotl;
import net.minecraft.world.entity.animal.camel.Camel;
import net.minecraft.world.entity.animal.frog.Frog;
import net.minecraft.world.entity.animal.frog.Tadpole;
import net.minecraft.world.entity.animal.goat.Goat;
import net.minecraft.world.entity.animal.horse.*;
import net.minecraft.world.entity.animal.sniffer.Sniffer;
import net.minecraft.world.entity.boss.enderdragon.EnderDragon;
import net.minecraft.world.entity.boss.wither.WitherBoss;
import net.minecraft.world.entity.decoration.PaintingVariants;
import net.minecraft.world.entity.monster.*;
import net.minecraft.world.entity.monster.hoglin.Hoglin;
import net.minecraft.world.entity.monster.piglin.Piglin;
import net.minecraft.world.entity.monster.piglin.PiglinBrute;
import net.minecraft.world.entity.monster.warden.Warden;
import net.minecraft.world.entity.npc.Villager;
import net.minecraft.world.entity.npc.VillagerProfession;
import net.minecraft.world.entity.npc.VillagerType;
import net.minecraft.world.entity.npc.WanderingTrader;
import net.minecraft.world.entity.raid.Raider;
import net.minecraft.world.item.enchantment.Enchantments;
import net.minecraft.world.level.GameRules;
import net.minecraft.world.level.biome.Biome;
import net.minecraft.world.level.biome.Biomes;
import net.minecraft.world.level.levelgen.structure.StructureType;
import uk.debb.vanilla_disable.gamerules.util.gamerules.GameruleCategories;
import uk.debb.vanilla_disable.gamerules.util.gamerules.Gamerules;

import static uk.debb.vanilla_disable.gamerules.util.gamerules.Gamerules.*;

public class PopulateMaps implements Maps {
    public static void populateMaps() {
        biomeGenerationSettingsStringMap.put(AquaticPlacements.KELP_COLD.toString(), OCEAN_VEGETATION);
        biomeGenerationSettingsStringMap.put(AquaticPlacements.KELP_WARM.toString(), OCEAN_VEGETATION);
        biomeGenerationSettingsStringMap.put(AquaticPlacements.SEA_PICKLE.toString(), OCEAN_VEGETATION);
        biomeGenerationSettingsStringMap.put(AquaticPlacements.SEAGRASS_COLD.toString(), OCEAN_VEGETATION);
        biomeGenerationSettingsStringMap.put(AquaticPlacements.SEAGRASS_DEEP.toString(), OCEAN_VEGETATION);
        biomeGenerationSettingsStringMap.put(AquaticPlacements.SEAGRASS_DEEP_COLD.toString(), OCEAN_VEGETATION);
        biomeGenerationSettingsStringMap.put(AquaticPlacements.SEAGRASS_DEEP_WARM.toString(), OCEAN_VEGETATION);
        biomeGenerationSettingsStringMap.put(AquaticPlacements.SEAGRASS_NORMAL.toString(), OCEAN_VEGETATION);
        biomeGenerationSettingsStringMap.put(AquaticPlacements.SEAGRASS_RIVER.toString(), OCEAN_VEGETATION);
        biomeGenerationSettingsStringMap.put(AquaticPlacements.SEAGRASS_SIMPLE.toString(), OCEAN_VEGETATION);
        biomeGenerationSettingsStringMap.put(AquaticPlacements.SEAGRASS_SWAMP.toString(), OCEAN_VEGETATION);
        biomeGenerationSettingsStringMap.put(AquaticPlacements.SEAGRASS_WARM.toString(), OCEAN_VEGETATION);
        biomeGenerationSettingsStringMap.put(AquaticPlacements.WARM_OCEAN_VEGETATION.toString(), OCEAN_VEGETATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.MONSTER_ROOM.toString(), DUNGEON_GENERATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.MONSTER_ROOM_DEEP.toString(), DUNGEON_GENERATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.FOSSIL_LOWER.toString(), FOSSIL_GENERATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.FOSSIL_UPPER.toString(), FOSSIL_GENERATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.DRIPSTONE_CLUSTER.toString(), DRIPSTONE_GENERATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.LARGE_DRIPSTONE.toString(), DRIPSTONE_GENERATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.POINTED_DRIPSTONE.toString(), DRIPSTONE_GENERATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.UNDERWATER_MAGMA.toString(), MAGMA_GENERATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.GLOW_LICHEN.toString(), UNDERGROUND_VEGETATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.ROOTED_AZALEA_TREE.toString(), UNDERGROUND_VEGETATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.CAVE_VINES.toString(), UNDERGROUND_VEGETATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.LUSH_CAVES_CEILING_VEGETATION.toString(), UNDERGROUND_VEGETATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.LUSH_CAVES_CLAY.toString(), UNDERGROUND_VEGETATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.LUSH_CAVES_VEGETATION.toString(), UNDERGROUND_VEGETATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.SPORE_BLOSSOM.toString(), UNDERGROUND_VEGETATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.CLASSIC_VINES.toString(), UNDERGROUND_VEGETATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.AMETHYST_GEODE.toString(), AMETHYST_GEODE_GENERATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.SCULK_PATCH_ANCIENT_CITY.toString(), SCULK_GENERATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.SCULK_PATCH_DEEP_DARK.toString(), SCULK_GENERATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.SCULK_VEIN.toString(), SCULK_GENERATION);
        biomeGenerationSettingsStringMap.put(EndPlacements.END_SPIKE.toString(), END_FEATURES_GENERATION);
        biomeGenerationSettingsStringMap.put(EndPlacements.END_GATEWAY_RETURN.toString(), END_FEATURES_GENERATION);
        biomeGenerationSettingsStringMap.put(EndPlacements.END_ISLAND_DECORATED.toString(), END_FEATURES_GENERATION);
        biomeGenerationSettingsStringMap.put(EndPlacements.CHORUS_PLANT.toString(), END_VEGETATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.DELTA.toString(), BASALT_BLACKSTONE_GENERATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.SMALL_BASALT_COLUMNS.toString(), BASALT_BLACKSTONE_GENERATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.LARGE_BASALT_COLUMNS.toString(), BASALT_BLACKSTONE_GENERATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.BASALT_BLOBS.toString(), BASALT_BLACKSTONE_GENERATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.BASALT_PILLAR.toString(), BASALT_BLACKSTONE_GENERATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.BLACKSTONE_BLOBS.toString(), BASALT_BLACKSTONE_GENERATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.GLOWSTONE.toString(), GLOWSTONE_GENERATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.GLOWSTONE_EXTRA.toString(), GLOWSTONE_GENERATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.SPRING_CLOSED.toString(), SPRING_GENERATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.SPRING_CLOSED_DOUBLE.toString(), SPRING_GENERATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.SPRING_DELTA.toString(), SPRING_GENERATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.SPRING_OPEN.toString(), SPRING_GENERATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.PATCH_FIRE.toString(), NETHER_FIRE_GENERATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.PATCH_SOUL_FIRE.toString(), NETHER_FIRE_GENERATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.CRIMSON_FOREST_VEGETATION.toString(), NETHER_VEGETATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.WARPED_FOREST_VEGETATION.toString(), NETHER_VEGETATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.NETHER_SPROUTS.toString(), NETHER_VEGETATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.TWISTING_VINES.toString(), NETHER_VEGETATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.WEEPING_VINES.toString(), NETHER_VEGETATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.ICE_PATCH.toString(), ICE_GENERATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.ICE_SPIKE.toString(), ICE_GENERATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.ICEBERG_BLUE.toString(), ICE_GENERATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.ICEBERG_PACKED.toString(), ICE_GENERATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.BLUE_ICE.toString(), ICE_GENERATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.FREEZE_TOP_LAYER.toString(), ICE_GENERATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.LAKE_LAVA_SURFACE.toString(), LAVA_LAKE_GENERATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.LAKE_LAVA_UNDERGROUND.toString(), LAVA_LAKE_GENERATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.DISK_CLAY.toString(), OCEAN_FLOOR_GENERATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.DISK_GRASS.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.DISK_GRAVEL.toString(), OCEAN_FLOOR_GENERATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.DISK_SAND.toString(), OCEAN_FLOOR_GENERATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.VOID_START_PLATFORM.toString(), END_FEATURES_GENERATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.DESERT_WELL.toString(), DESERT_WELL_GENERATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.SPRING_LAVA.toString(), SPRING_GENERATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.SPRING_LAVA_FROZEN.toString(), SPRING_GENERATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.SPRING_WATER.toString(), SPRING_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.CRIMSON_FUNGI.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.WARPED_FUNGI.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.OAK_CHECKED.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.DARK_OAK_CHECKED.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.BIRCH_CHECKED.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.ACACIA_CHECKED.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.SPRUCE_CHECKED.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.PINE_ON_SNOW.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.SPRUCE_ON_SNOW.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.PINE_CHECKED.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.JUNGLE_TREE_CHECKED.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.FANCY_OAK_CHECKED.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.MEGA_JUNGLE_TREE_CHECKED.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.MEGA_SPRUCE_CHECKED.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.MEGA_PINE_CHECKED.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.JUNGLE_BUSH.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.SUPER_BIRCH_BEES_0002.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.SUPER_BIRCH_BEES.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.OAK_BEES_0002.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.OAK_BEES_002.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.BIRCH_BEES_0002_PLACED.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.BIRCH_BEES_002.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.FANCY_OAK_BEES_0002.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.FANCY_OAK_BEES_002.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.FANCY_OAK_BEES.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.MANGROVE_CHECKED.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.TALL_MANGROVE_CHECKED.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.CHERRY_BEES_005.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.CHERRY_CHECKED.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VillagePlacements.PILE_HAY_VILLAGE.toString(), VILLAGE_GENERATION);
        biomeGenerationSettingsStringMap.put(VillagePlacements.PILE_ICE_VILLAGE.toString(), VILLAGE_GENERATION);
        biomeGenerationSettingsStringMap.put(VillagePlacements.PILE_MELON_VILLAGE.toString(), VILLAGE_GENERATION);
        biomeGenerationSettingsStringMap.put(VillagePlacements.PILE_PUMPKIN_VILLAGE.toString(), VILLAGE_GENERATION);
        biomeGenerationSettingsStringMap.put(VillagePlacements.PILE_SNOW_VILLAGE.toString(), VILLAGE_GENERATION);
        biomeGenerationSettingsStringMap.put(VillagePlacements.OAK_VILLAGE.toString(), VILLAGE_GENERATION);
        biomeGenerationSettingsStringMap.put(VillagePlacements.ACACIA_VILLAGE.toString(), VILLAGE_GENERATION);
        biomeGenerationSettingsStringMap.put(VillagePlacements.SPRUCE_VILLAGE.toString(), VILLAGE_GENERATION);
        biomeGenerationSettingsStringMap.put(VillagePlacements.PINE_VILLAGE.toString(), VILLAGE_GENERATION);
        biomeGenerationSettingsStringMap.put(VillagePlacements.PATCH_BERRY_BUSH_VILLAGE.toString(), VILLAGE_GENERATION);
        biomeGenerationSettingsStringMap.put(VillagePlacements.PATCH_CACTUS_VILLAGE.toString(), VILLAGE_GENERATION);
        biomeGenerationSettingsStringMap.put(VillagePlacements.PATCH_TAIGA_GRASS_VILLAGE.toString(), VILLAGE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_ANCIENT_DEBRIS_LARGE.toString(), NETHER_ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_ANDESITE_LOWER.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_ANDESITE_UPPER.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_BLACKSTONE.toString(), BASALT_BLACKSTONE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_CLAY.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_COAL_LOWER.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_COAL_UPPER.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_COPPER.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_COPPER_LARGE.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_ANCIENT_DEBRIS_SMALL.toString(), NETHER_ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_DIAMOND.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_DIAMOND_BURIED.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_DIAMOND_LARGE.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_DIORITE_LOWER.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_DIORITE_UPPER.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_DIRT.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_EMERALD.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_GOLD.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_GOLD_DELTAS.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_GOLD_EXTRA.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_GOLD_LOWER.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_GOLD_NETHER.toString(), NETHER_ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_GRANITE_LOWER.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_GRANITE_UPPER.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_GRAVEL.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_GRAVEL_NETHER.toString(), NETHER_ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_INFESTED.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_IRON_MIDDLE.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_IRON_SMALL.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_IRON_UPPER.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_LAPIS.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_LAPIS_BURIED.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_MAGMA.toString(), MAGMA_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_QUARTZ_DELTAS.toString(), NETHER_ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_QUARTZ_NETHER.toString(), NETHER_ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_REDSTONE.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_REDSTONE_LOWER.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_SOUL_SAND.toString(), NETHER_ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_TUFF.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.BAMBOO.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.BAMBOO_LIGHT.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.BAMBOO_VEGETATION.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.VINES.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_SUNFLOWER.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_PUMPKIN.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_GRASS_BADLANDS.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_GRASS_FOREST.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_GRASS_JUNGLE.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_GRASS_NORMAL.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_GRASS_PLAIN.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_GRASS_SAVANNA.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_GRASS_TAIGA.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_GRASS_TAIGA_2.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.GRASS_BONEMEAL.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_DEAD_BUSH.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_DEAD_BUSH_2.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_DEAD_BUSH_BADLANDS.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_MELON.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_MELON_SPARSE.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_BERRY_COMMON.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_BERRY_RARE.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_WATERLILY.toString(), OCEAN_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_TALL_GRASS.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_TALL_GRASS_2.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_LARGE_FERN.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_CACTUS_DECORATED.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_CACTUS_DESERT.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_SUGAR_CANE.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_SUGAR_CANE_BADLANDS.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_SUGAR_CANE_DESERT.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_SUGAR_CANE_SWAMP.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.BROWN_MUSHROOM_NETHER.toString(), NETHER_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.BROWN_MUSHROOM_NORMAL.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.BROWN_MUSHROOM_OLD_GROWTH.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.BROWN_MUSHROOM_SWAMP.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.BROWN_MUSHROOM_TAIGA.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.RED_MUSHROOM_NETHER.toString(), NETHER_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.RED_MUSHROOM_NORMAL.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.RED_MUSHROOM_OLD_GROWTH.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.RED_MUSHROOM_SWAMP.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.RED_MUSHROOM_TAIGA.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.FLOWER_DEFAULT.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.FLOWER_FLOWER_FOREST.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.FLOWER_FOREST_FLOWERS.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.FLOWER_MEADOW.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.FLOWER_PLAINS.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.FLOWER_SWAMP.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.FLOWER_WARM.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_BADLANDS.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_BIRCH.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_BIRCH_AND_OAK.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_FLOWER_FOREST.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_GROVE.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_JUNGLE.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_MEADOW.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_OLD_GROWTH_PINE_TAIGA.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_OLD_GROWTH_SPRUCE_TAIGA.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_PLAINS.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_SAVANNA.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_SNOWY.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_SPARSE_JUNGLE.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_SWAMP.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_TAIGA.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_WATER.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_WINDSWEPT_FOREST.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_WINDSWEPT_HILLS.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_WINDSWEPT_SAVANNA.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.MUSHROOM_ISLAND_VEGETATION.toString(), OVERWORLD_VEGETATION);

        structureCheckStructureTypeMap.put(StructureType.BURIED_TREASURE, BURIED_TREASURE_GENERATION);
        structureCheckStructureTypeMap.put(StructureType.DESERT_PYRAMID, DESERT_PYRAMID_GENERATION);
        structureCheckStructureTypeMap.put(StructureType.END_CITY, END_CITY_GENERATION);
        structureCheckStructureTypeMap.put(StructureType.IGLOO, IGLOO_GENERATION);
        structureCheckStructureTypeMap.put(StructureType.JUNGLE_TEMPLE, JUNGLE_PYRAMID_GENERATION);
        structureCheckStructureTypeMap.put(StructureType.MINESHAFT, MINESHAFT_GENERATION);
        structureCheckStructureTypeMap.put(StructureType.FORTRESS, FORTRESS_GENERATION);
        structureCheckStructureTypeMap.put(StructureType.NETHER_FOSSIL, NETHER_FOSSIL_GENERATION);
        structureCheckStructureTypeMap.put(StructureType.OCEAN_MONUMENT, MONUMENT_GENERATION);
        structureCheckStructureTypeMap.put(StructureType.OCEAN_RUIN, OCEAN_RUIN_GENERATION);
        structureCheckStructureTypeMap.put(StructureType.RUINED_PORTAL, RUINED_PORTAL_GENERATION);
        structureCheckStructureTypeMap.put(StructureType.SHIPWRECK, SHIPWRECK_GENERATION);
        structureCheckStructureTypeMap.put(StructureType.STRONGHOLD, STRONGHOLD_GENERATION);
        structureCheckStructureTypeMap.put(StructureType.SWAMP_HUT, SWAMP_HUT_GENERATION);
        structureCheckStructureTypeMap.put(StructureType.WOODLAND_MANSION, MANSION_GENERATION);

        structureCheckStringMap.put("minecraft:ancient_city/city_center", ANCIENT_CITY_GENERATION);
        structureCheckStringMap.put("minecraft:bastion/starts", BASTION_REMNANT_GENERATION);
        structureCheckStringMap.put("minecraft:pillager_outpost/base_plates", PILLAGER_OUTPOST_GENERATION);
        structureCheckStringMap.put("minecraft:trail_ruins/tower", TRAIL_RUINS_GENERATION);
        structureCheckStringMap.put("minecraft:village/desert/town_centers", VILLAGE_GENERATION);
        structureCheckStringMap.put("minecraft:village/plains/town_centers", VILLAGE_GENERATION);
        structureCheckStringMap.put("minecraft:village/savanna/town_centers", VILLAGE_GENERATION);
        structureCheckStringMap.put("minecraft:village/snowy/town_centers", VILLAGE_GENERATION);
        structureCheckStringMap.put("minecraft:village/taiga/town_centers", VILLAGE_GENERATION);

        mobCategoryMobCategoryMapMobcap.put(MobCategory.MONSTER, MONSTER_MOBCAP);
        mobCategoryMobCategoryMapMobcap.put(MobCategory.CREATURE, CREATURE_MOBCAP);
        mobCategoryMobCategoryMapMobcap.put(MobCategory.AMBIENT, AMBIENT_MOBCAP);
        mobCategoryMobCategoryMapMobcap.put(MobCategory.AXOLOTLS, AXOLOTL_MOBCAP);
        mobCategoryMobCategoryMapMobcap.put(MobCategory.UNDERGROUND_WATER_CREATURE, GLOWSQUID_MOBCAP);
        mobCategoryMobCategoryMapMobcap.put(MobCategory.WATER_AMBIENT, WATER_AMBIENT_MOBCAP);
        mobCategoryMobCategoryMapMobcap.put(MobCategory.WATER_CREATURE, WATER_CREATURE_MOBCAP);

        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.FROST_WALKER, Enchantments.DEPTH_STRIDER), BOOT_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.INFINITY_ARROWS, Enchantments.MENDING), BOW_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.MULTISHOT, Enchantments.PIERCING), CROSSBOW_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.SHARPNESS, Enchantments.SMITE), DAMAGE_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.SHARPNESS, Enchantments.BANE_OF_ARTHROPODS), DAMAGE_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.SMITE, Enchantments.BANE_OF_ARTHROPODS), DAMAGE_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.BLOCK_FORTUNE, Enchantments.SILK_TOUCH), MINING_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.ALL_DAMAGE_PROTECTION, Enchantments.BLAST_PROTECTION), PROTECTION_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.ALL_DAMAGE_PROTECTION, Enchantments.PROJECTILE_PROTECTION), PROTECTION_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.ALL_DAMAGE_PROTECTION, Enchantments.FALL_PROTECTION), PROTECTION_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.ALL_DAMAGE_PROTECTION, Enchantments.FIRE_PROTECTION), PROTECTION_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.BLAST_PROTECTION, Enchantments.PROJECTILE_PROTECTION), PROTECTION_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.BLAST_PROTECTION, Enchantments.FALL_PROTECTION), PROTECTION_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.BLAST_PROTECTION, Enchantments.FIRE_PROTECTION), PROTECTION_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.PROJECTILE_PROTECTION, Enchantments.FALL_PROTECTION), PROTECTION_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.PROJECTILE_PROTECTION, Enchantments.FIRE_PROTECTION), PROTECTION_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.FALL_PROTECTION, Enchantments.FIRE_PROTECTION), PROTECTION_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.RIPTIDE, Enchantments.LOYALTY), TRIDENT_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.RIPTIDE, Enchantments.CHANNELING), TRIDENT_ENCHANTMENT_CONFLICTS);

        for (GameruleCategories category : GameruleCategories.values()) {
            stringToVanillaDisableGameruleCategoryMap.put(category.toString().toLowerCase(), category);
        }

        for (Gamerules gamerule : Gamerules.values()) {
            switch (gamerule.getType()) {
                case "boolean" -> stringToDefaultBooleanMap.put(gamerule.getRuleName(), gamerule.getDefaultBoolean());
                case "integer" -> stringToDefaultIntMap.put(gamerule.getRuleName(), gamerule.getDefaultInt());
                case "double" -> stringToDefaultDoubleMap.put(gamerule.getRuleName(), gamerule.getDefaultDouble());
            }
        }
        stringToDefaultBooleanMap.put("doFireTick", true);
        stringToDefaultBooleanMap.put("mobGriefing", true);
        stringToDefaultBooleanMap.put("keepInventory", false);
        stringToDefaultBooleanMap.put("doMobSpawning", true);
        stringToDefaultBooleanMap.put("doMobLoot", true);
        stringToDefaultBooleanMap.put("doTileDrops", true);
        stringToDefaultBooleanMap.put("doEntityDrops", true);
        stringToDefaultBooleanMap.put("commandBlockOutput", true);
        stringToDefaultBooleanMap.put("naturalRegeneration", true);
        stringToDefaultBooleanMap.put("doDaylightCycle", true);
        stringToDefaultBooleanMap.put("logAdminCommands", true);
        stringToDefaultBooleanMap.put("showDeathMessages", true);
        stringToDefaultBooleanMap.put("sendCommandFeedback", true);
        stringToDefaultBooleanMap.put("reducedDebugInfo", false);
        stringToDefaultBooleanMap.put("spectatorsGenerateChunks", true);
        stringToDefaultBooleanMap.put("disableElytraMovementCheck", false);
        stringToDefaultBooleanMap.put("doWeatherCycle", true);
        stringToDefaultBooleanMap.put("doLimitedCrafting", false);
        stringToDefaultBooleanMap.put("announceAdvancements", true);
        stringToDefaultBooleanMap.put("disableRaids", false);
        stringToDefaultBooleanMap.put("doInsomnia", true);
        stringToDefaultBooleanMap.put("doImmediateRespawn", false);
        stringToDefaultBooleanMap.put("drowningDamage", true);
        stringToDefaultBooleanMap.put("fallDamage", true);
        stringToDefaultBooleanMap.put("fireDamage", true);
        stringToDefaultBooleanMap.put("freezeDamage", true);
        stringToDefaultBooleanMap.put("doPatrolSpawning", true);
        stringToDefaultBooleanMap.put("doTraderSpawning", true);
        stringToDefaultBooleanMap.put("doWardenSpawning", true);
        stringToDefaultBooleanMap.put("forgiveDeadPlayers", true);
        stringToDefaultBooleanMap.put("universalAnger", false);
        stringToDefaultIntMap.put("randomTickSpeed", 3);
        stringToDefaultIntMap.put("spawnRadius", 10);
        stringToDefaultIntMap.put("maxEntityCramming", 24);
        stringToDefaultIntMap.put("maxCommandChainLength", 65536);
        stringToDefaultIntMap.put("playersSleepingPercentage", 100);

        for (Gamerules gamerule : Gamerules.values()) {
            switch (gamerule.getType()) {
                case "integer" -> {
                    stringToMinIntMap.put(gamerule.getRuleName(), gamerule.getMinInt());
                    stringToMaxIntMap.put(gamerule.getRuleName(), gamerule.getMaxInt());
                }
                case "double" -> {
                    stringToMinDoubleMap.put(gamerule.getRuleName(), 0.0);
                    stringToMaxDoubleMap.put(gamerule.getRuleName(), gamerule.getMaxDouble());
                }
            }
        }

        stringToVanillaGameruleCategoryMap.put("vanilla_player", GameRules.Category.PLAYER);
        stringToVanillaGameruleCategoryMap.put("vanilla_mobs", GameRules.Category.MOBS);
        stringToVanillaGameruleCategoryMap.put("vanilla_spawning", GameRules.Category.SPAWNING);
        stringToVanillaGameruleCategoryMap.put("vanilla_drops", GameRules.Category.DROPS);
        stringToVanillaGameruleCategoryMap.put("vanilla_updates", GameRules.Category.UPDATES);
        stringToVanillaGameruleCategoryMap.put("vanilla_chat", GameRules.Category.CHAT);
        stringToVanillaGameruleCategoryMap.put("vanilla_misc", GameRules.Category.MISC);
    }

    public static void populateBiomeMap() {
        Registry<Biome> biomeRegistry = server.registryAccess().registryOrThrow(Registries.BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.BADLANDS), BADLANDS_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.BAMBOO_JUNGLE), BAMBOO_JUNGLE_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.BEACH), BEACH_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.BIRCH_FOREST), BIRCH_FOREST_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.CHERRY_GROVE), CHERRY_GROVE_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.COLD_OCEAN), COLD_OCEAN_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.DARK_FOREST), DARK_FOREST_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.DEEP_COLD_OCEAN), DEEP_COLD_OCEAN_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.DEEP_DARK), DEEP_DARK_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.DEEP_FROZEN_OCEAN), DEEP_FROZEN_OCEAN_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.DEEP_LUKEWARM_OCEAN), DEEP_LUKEWARM_OCEAN_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.DEEP_OCEAN), DEEP_OCEAN_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.DESERT), DESERT_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.DRIPSTONE_CAVES), DRIPSTONE_CAVES_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.ERODED_BADLANDS), ERODED_BADLANDS_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.FLOWER_FOREST), FLOWER_FOREST_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.FOREST), FOREST_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.FROZEN_OCEAN), FROZEN_OCEAN_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.FROZEN_PEAKS), FROZEN_PEAKS_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.FROZEN_RIVER), FROZEN_RIVER_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.GROVE), GROVE_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.ICE_SPIKES), ICE_SPIKES_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.JAGGED_PEAKS), JAGGED_PEAKS_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.JUNGLE), JUNGLE_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.LUKEWARM_OCEAN), LUKEWARM_OCEAN_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.LUSH_CAVES), LUSH_CAVES_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.MANGROVE_SWAMP), MANGROVE_SWAMP_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.MEADOW), MEADOW_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.MUSHROOM_FIELDS), MUSHROOM_FIELDS_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.OCEAN), OCEAN_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.OLD_GROWTH_BIRCH_FOREST), OLD_GROWTH_BIRCH_FOREST_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.OLD_GROWTH_PINE_TAIGA), OLD_GROWTH_PINE_TAIGA_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.OLD_GROWTH_SPRUCE_TAIGA), OLD_GROWTH_SPRUCE_TAIGA_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.RIVER), RIVER_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.SAVANNA), SAVANNA_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.SAVANNA_PLATEAU), SAVANNA_PLATEAU_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.SNOWY_BEACH), SNOWY_BEACH_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.SNOWY_PLAINS), SNOWY_PLAINS_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.SNOWY_SLOPES), SNOWY_SLOPES_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.SNOWY_TAIGA), SNOWY_TAIGA_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.SPARSE_JUNGLE), SPARSE_JUNGLE_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.STONY_PEAKS), STONY_PEAKS_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.STONY_SHORE), STONY_SHORE_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.SUNFLOWER_PLAINS), SUNFLOWER_PLAINS_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.SWAMP), SWAMP_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.TAIGA), TAIGA_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.WARM_OCEAN), WARM_OCEAN_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.WINDSWEPT_FOREST), WINDSWEPT_FOREST_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.WINDSWEPT_GRAVELLY_HILLS), WINDSWEPT_GRAVELLY_HILLS_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.WINDSWEPT_HILLS), WINDSWEPT_HILLS_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.WINDSWEPT_SAVANNA), WINDSWEPT_SAVANNA_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.WOODED_BADLANDS), WOODED_BADLANDS_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.BASALT_DELTAS), BASALT_DELTAS_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.CRIMSON_FOREST), CRIMSON_FOREST_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.SOUL_SAND_VALLEY), SOUL_SAND_VALLEY_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.WARPED_FOREST), WARPED_FOREST_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.END_BARRENS), END_BARRENS_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.END_HIGHLANDS), END_HIGHLANDS_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.END_MIDLANDS), END_MIDLANDS_BIOME);
        biomeSourceBiomeHolderMap.put(biomeRegistry.getHolderOrThrow(Biomes.SMALL_END_ISLANDS), SMALL_END_ISLANDS_BIOME);
    }
}