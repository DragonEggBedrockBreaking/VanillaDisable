package uk.debb.vanilla_disable.util.maps;

import it.unimi.dsi.fastutil.objects.ObjectObjectImmutablePair;
import net.minecraft.core.Registry;
import net.minecraft.data.BuiltinRegistries;
import net.minecraft.data.worldgen.placement.*;
import net.minecraft.server.level.ServerPlayer;
import net.minecraft.world.damagesource.DamageSource;
import net.minecraft.world.effect.MobEffects;
import net.minecraft.world.entity.GlowSquid;
import net.minecraft.world.entity.MobCategory;
import net.minecraft.world.entity.ai.goal.*;
import net.minecraft.world.entity.ambient.AmbientCreature;
import net.minecraft.world.entity.ambient.Bat;
import net.minecraft.world.entity.animal.*;
import net.minecraft.world.entity.animal.allay.Allay;
import net.minecraft.world.entity.animal.axolotl.Axolotl;
import net.minecraft.world.entity.animal.frog.Frog;
import net.minecraft.world.entity.animal.frog.Tadpole;
import net.minecraft.world.entity.animal.goat.Goat;
import net.minecraft.world.entity.animal.horse.*;
import net.minecraft.world.entity.boss.enderdragon.EnderDragon;
import net.minecraft.world.entity.boss.wither.WitherBoss;
import net.minecraft.world.entity.decoration.PaintingVariants;
import net.minecraft.world.entity.monster.*;
import net.minecraft.world.entity.monster.hoglin.Hoglin;
import net.minecraft.world.entity.monster.piglin.Piglin;
import net.minecraft.world.entity.monster.piglin.PiglinBrute;
import net.minecraft.world.entity.monster.warden.Warden;
import net.minecraft.world.entity.npc.Villager;
import net.minecraft.world.entity.npc.VillagerProfession;
import net.minecraft.world.entity.npc.VillagerType;
import net.minecraft.world.entity.npc.WanderingTrader;
import net.minecraft.world.entity.raid.Raider;
import net.minecraft.world.food.Foods;
import net.minecraft.world.item.DyeColor;
import net.minecraft.world.item.Items;
import net.minecraft.world.item.SpawnEggItem;
import net.minecraft.world.item.alchemy.Potions;
import net.minecraft.world.item.enchantment.Enchantments;
import net.minecraft.world.level.biome.Biomes;
import net.minecraft.world.level.block.Blocks;
import net.minecraft.world.level.block.ShulkerBoxBlock;
import net.minecraft.world.level.levelgen.structure.StructureType;

import static uk.debb.vanilla_disable.util.gamerules.Gamerules.*;

public class PopulateMaps implements Maps {
    public static void populateMaps() {
        livingEntityMobEffectMap.put(MobEffects.ABSORPTION, ABSORPTION_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.BAD_OMEN, BAD_OMEN_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.BLINDNESS, BLINDNESS_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.CONDUIT_POWER, CONDUIT_POWER_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.DARKNESS, DARKNESS_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.DOLPHINS_GRACE, DOLPHINS_GRACE_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.FIRE_RESISTANCE, FIRE_RESISTANCE_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.GLOWING, GLOWING_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.DIG_SPEED, HASTE_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.HEALTH_BOOST, HEALTH_BOOST_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.HUNGER, HUNGER_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.HARM, INSTANT_DAMAGE_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.HEAL, INSTANT_HEALTH_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.INVISIBILITY, INVISIBILITY_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.JUMP, JUMP_BOOST_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.LEVITATION, LEVITATION_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.LUCK, LUCK_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.DIG_SLOWDOWN, MINING_FATIGUE_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.CONFUSION, NAUSEA_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.NIGHT_VISION, NIGHT_VISION_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.POISON, POISON_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.REGENERATION, REGENERATION_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.DAMAGE_RESISTANCE, RESISTANCE_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.SATURATION, SATURATION_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.MOVEMENT_SLOWDOWN, SLOWNESS_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.SLOW_FALLING, SLOW_FALLING_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.MOVEMENT_SPEED, SPEED_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.DAMAGE_BOOST, STRENGTH_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.UNLUCK, UNLUCK_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.WATER_BREATHING, WATER_BREATHING_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.WEAKNESS, WEAKNESS_EFFECT);
        livingEntityMobEffectMap.put(MobEffects.WITHER, WITHER_EFFECT);

        biomeGenerationSettingsStringMap.put(AquaticPlacements.KELP_COLD.toString(), OCEAN_VEGETATION);
        biomeGenerationSettingsStringMap.put(AquaticPlacements.KELP_WARM.toString(), OCEAN_VEGETATION);
        biomeGenerationSettingsStringMap.put(AquaticPlacements.SEA_PICKLE.toString(), OCEAN_VEGETATION);
        biomeGenerationSettingsStringMap.put(AquaticPlacements.SEAGRASS_COLD.toString(), OCEAN_VEGETATION);
        biomeGenerationSettingsStringMap.put(AquaticPlacements.SEAGRASS_DEEP.toString(), OCEAN_VEGETATION);
        biomeGenerationSettingsStringMap.put(AquaticPlacements.SEAGRASS_DEEP_COLD.toString(), OCEAN_VEGETATION);
        biomeGenerationSettingsStringMap.put(AquaticPlacements.SEAGRASS_DEEP_WARM.toString(), OCEAN_VEGETATION);
        biomeGenerationSettingsStringMap.put(AquaticPlacements.SEAGRASS_NORMAL.toString(), OCEAN_VEGETATION);
        biomeGenerationSettingsStringMap.put(AquaticPlacements.SEAGRASS_RIVER.toString(), OCEAN_VEGETATION);
        biomeGenerationSettingsStringMap.put(AquaticPlacements.SEAGRASS_SIMPLE.toString(), OCEAN_VEGETATION);
        biomeGenerationSettingsStringMap.put(AquaticPlacements.SEAGRASS_SWAMP.toString(), OCEAN_VEGETATION);
        biomeGenerationSettingsStringMap.put(AquaticPlacements.SEAGRASS_WARM.toString(), OCEAN_VEGETATION);
        biomeGenerationSettingsStringMap.put(AquaticPlacements.WARM_OCEAN_VEGETATION.toString(), OCEAN_VEGETATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.MONSTER_ROOM.toString(), DUNGEON_GENERATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.MONSTER_ROOM_DEEP.toString(), DUNGEON_GENERATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.FOSSIL_LOWER.toString(), FOSSIL_GENERATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.FOSSIL_UPPER.toString(), FOSSIL_GENERATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.DRIPSTONE_CLUSTER.toString(), DRIPSTONE_GENERATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.LARGE_DRIPSTONE.toString(), DRIPSTONE_GENERATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.POINTED_DRIPSTONE.toString(), DRIPSTONE_GENERATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.UNDERWATER_MAGMA.toString(), MAGMA_GENERATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.GLOW_LICHEN.toString(), UNDERGROUND_VEGETATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.ROOTED_AZALEA_TREE.toString(), UNDERGROUND_VEGETATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.CAVE_VINES.toString(), UNDERGROUND_VEGETATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.LUSH_CAVES_CEILING_VEGETATION.toString(), UNDERGROUND_VEGETATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.LUSH_CAVES_CLAY.toString(), UNDERGROUND_VEGETATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.LUSH_CAVES_VEGETATION.toString(), UNDERGROUND_VEGETATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.SPORE_BLOSSOM.toString(), UNDERGROUND_VEGETATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.CLASSIC_VINES.toString(), UNDERGROUND_VEGETATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.AMETHYST_GEODE.toString(), AMETHYST_GEODE_GENERATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.SCULK_PATCH_ANCIENT_CITY.toString(), SCULK_GENERATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.SCULK_PATCH_DEEP_DARK.toString(), SCULK_GENERATION);
        biomeGenerationSettingsStringMap.put(CavePlacements.SCULK_VEIN.toString(), SCULK_GENERATION);
        biomeGenerationSettingsStringMap.put(EndPlacements.END_SPIKE.toString(), END_FEATURES_GENERATION);
        biomeGenerationSettingsStringMap.put(EndPlacements.END_GATEWAY_RETURN.toString(), END_FEATURES_GENERATION);
        biomeGenerationSettingsStringMap.put(EndPlacements.END_ISLAND_DECORATED.toString(), END_FEATURES_GENERATION);
        biomeGenerationSettingsStringMap.put(EndPlacements.CHORUS_PLANT.toString(), END_VEGETATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.DELTA.toString(), BASALT_BLACKSTONE_GENERATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.SMALL_BASALT_COLUMNS.toString(), BASALT_BLACKSTONE_GENERATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.LARGE_BASALT_COLUMNS.toString(), BASALT_BLACKSTONE_GENERATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.BASALT_BLOBS.toString(), BASALT_BLACKSTONE_GENERATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.BASALT_PILLAR.toString(), BASALT_BLACKSTONE_GENERATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.BLACKSTONE_BLOBS.toString(), BASALT_BLACKSTONE_GENERATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.GLOWSTONE.toString(), GLOWSTONE_GENERATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.GLOWSTONE_EXTRA.toString(), GLOWSTONE_GENERATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.SPRING_CLOSED.toString(), SPRING_GENERATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.SPRING_CLOSED_DOUBLE.toString(), SPRING_GENERATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.SPRING_DELTA.toString(), SPRING_GENERATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.SPRING_OPEN.toString(), SPRING_GENERATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.PATCH_FIRE.toString(), NETHER_FIRE_GENERATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.PATCH_SOUL_FIRE.toString(), NETHER_FIRE_GENERATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.CRIMSON_FOREST_VEGETATION.toString(), NETHER_VEGETATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.WARPED_FOREST_VEGETATION.toString(), NETHER_VEGETATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.NETHER_SPROUTS.toString(), NETHER_VEGETATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.TWISTING_VINES.toString(), NETHER_VEGETATION);
        biomeGenerationSettingsStringMap.put(NetherPlacements.WEEPING_VINES.toString(), NETHER_VEGETATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.ICE_PATCH.toString(), ICE_GENERATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.ICE_SPIKE.toString(), ICE_GENERATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.ICEBERG_BLUE.toString(), ICE_GENERATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.ICEBERG_PACKED.toString(), ICE_GENERATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.BLUE_ICE.toString(), ICE_GENERATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.FREEZE_TOP_LAYER.toString(), ICE_GENERATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.LAKE_LAVA_SURFACE.toString(), LAVA_LAKE_GENERATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.LAKE_LAVA_UNDERGROUND.toString(), LAVA_LAKE_GENERATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.DISK_CLAY.toString(), OCEAN_FLOOR_GENERATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.DISK_GRASS.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.DISK_GRAVEL.toString(), OCEAN_FLOOR_GENERATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.DISK_SAND.toString(), OCEAN_FLOOR_GENERATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.VOID_START_PLATFORM.toString(), END_FEATURES_GENERATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.DESERT_WELL.toString(), DESERT_WELL_GENERATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.SPRING_LAVA.toString(), SPRING_GENERATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.SPRING_LAVA_FROZEN.toString(), SPRING_GENERATION);
        biomeGenerationSettingsStringMap.put(MiscOverworldPlacements.SPRING_WATER.toString(), SPRING_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.CRIMSON_FUNGI.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.WARPED_FUNGI.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.OAK_CHECKED.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.DARK_OAK_CHECKED.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.BIRCH_CHECKED.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.ACACIA_CHECKED.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.SPRUCE_CHECKED.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.PINE_ON_SNOW.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.SPRUCE_ON_SNOW.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.PINE_CHECKED.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.JUNGLE_TREE_CHECKED.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.FANCY_OAK_CHECKED.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.MEGA_JUNGLE_TREE_CHECKED.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.MEGA_SPRUCE_CHECKED.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.MEGA_PINE_CHECKED.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.JUNGLE_BUSH.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.SUPER_BIRCH_BEES_0002.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.SUPER_BIRCH_BEES.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.OAK_BEES_0002.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.OAK_BEES_002.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.BIRCH_BEES_0002_PLACED.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.BIRCH_BEES_002.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.FANCY_OAK_BEES_0002.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.FANCY_OAK_BEES_002.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.FANCY_OAK_BEES.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.MANGROVE_CHECKED.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(TreePlacements.TALL_MANGROVE_CHECKED.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VillagePlacements.PILE_HAY_VILLAGE.toString(), VILLAGE_GENERATION);
        biomeGenerationSettingsStringMap.put(VillagePlacements.PILE_ICE_VILLAGE.toString(), VILLAGE_GENERATION);
        biomeGenerationSettingsStringMap.put(VillagePlacements.PILE_MELON_VILLAGE.toString(), VILLAGE_GENERATION);
        biomeGenerationSettingsStringMap.put(VillagePlacements.PILE_PUMPKIN_VILLAGE.toString(), VILLAGE_GENERATION);
        biomeGenerationSettingsStringMap.put(VillagePlacements.PILE_SNOW_VILLAGE.toString(), VILLAGE_GENERATION);
        biomeGenerationSettingsStringMap.put(VillagePlacements.OAK_VILLAGE.toString(), VILLAGE_GENERATION);
        biomeGenerationSettingsStringMap.put(VillagePlacements.ACACIA_VILLAGE.toString(), VILLAGE_GENERATION);
        biomeGenerationSettingsStringMap.put(VillagePlacements.SPRUCE_VILLAGE.toString(), VILLAGE_GENERATION);
        biomeGenerationSettingsStringMap.put(VillagePlacements.PINE_VILLAGE.toString(), VILLAGE_GENERATION);
        biomeGenerationSettingsStringMap.put(VillagePlacements.PATCH_BERRY_BUSH_VILLAGE.toString(), VILLAGE_GENERATION);
        biomeGenerationSettingsStringMap.put(VillagePlacements.PATCH_CACTUS_VILLAGE.toString(), VILLAGE_GENERATION);
        biomeGenerationSettingsStringMap.put(VillagePlacements.PATCH_TAIGA_GRASS_VILLAGE.toString(), VILLAGE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_ANCIENT_DEBRIS_LARGE.toString(), NETHER_ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_ANDESITE_LOWER.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_ANDESITE_UPPER.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_BLACKSTONE.toString(), BASALT_BLACKSTONE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_CLAY.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_COAL_LOWER.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_COAL_UPPER.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_COPPER.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_COPPER_LARGE.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_ANCIENT_DEBRIS_SMALL.toString(), NETHER_ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_DIAMOND.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_DIAMOND_BURIED.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_DIAMOND_LARGE.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_DIORITE_LOWER.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_DIORITE_UPPER.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_DIRT.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_EMERALD.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_GOLD.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_GOLD_DELTAS.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_GOLD_EXTRA.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_GOLD_LOWER.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_GOLD_NETHER.toString(), NETHER_ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_GRANITE_LOWER.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_GRANITE_UPPER.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_GRAVEL.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_GRAVEL_NETHER.toString(), NETHER_ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_INFESTED.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_IRON_MIDDLE.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_IRON_SMALL.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_IRON_UPPER.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_LAPIS.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_LAPIS_BURIED.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_MAGMA.toString(), MAGMA_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_QUARTZ_DELTAS.toString(), NETHER_ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_QUARTZ_NETHER.toString(), NETHER_ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_REDSTONE.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_REDSTONE_LOWER.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_SOUL_SAND.toString(), NETHER_ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(OrePlacements.ORE_TUFF.toString(), ORE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.BAMBOO.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.BAMBOO_LIGHT.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.BAMBOO_VEGETATION.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.VINES.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_SUNFLOWER.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_PUMPKIN.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_GRASS_BADLANDS.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_GRASS_FOREST.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_GRASS_JUNGLE.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_GRASS_NORMAL.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_GRASS_PLAIN.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_GRASS_SAVANNA.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_GRASS_TAIGA.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_GRASS_TAIGA_2.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.GRASS_BONEMEAL.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_DEAD_BUSH.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_DEAD_BUSH_2.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_DEAD_BUSH_BADLANDS.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_MELON.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_MELON_SPARSE.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_BERRY_COMMON.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_BERRY_RARE.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_WATERLILY.toString(), OCEAN_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_TALL_GRASS.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_TALL_GRASS_2.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_LARGE_FERN.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_CACTUS_DECORATED.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_CACTUS_DESERT.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_SUGAR_CANE.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_SUGAR_CANE_BADLANDS.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_SUGAR_CANE_DESERT.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.PATCH_SUGAR_CANE_SWAMP.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.BROWN_MUSHROOM_NETHER.toString(), NETHER_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.BROWN_MUSHROOM_NORMAL.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.BROWN_MUSHROOM_OLD_GROWTH.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.BROWN_MUSHROOM_SWAMP.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.BROWN_MUSHROOM_TAIGA.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.RED_MUSHROOM_NETHER.toString(), NETHER_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.RED_MUSHROOM_NORMAL.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.RED_MUSHROOM_OLD_GROWTH.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.RED_MUSHROOM_SWAMP.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.RED_MUSHROOM_TAIGA.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.FLOWER_DEFAULT.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.FLOWER_FLOWER_FOREST.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.FLOWER_FOREST_FLOWERS.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.FLOWER_MEADOW.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.FLOWER_PLAINS.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.FLOWER_SWAMP.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.FLOWER_WARM.toString(), OVERWORLD_VEGETATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_BADLANDS.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_BIRCH.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_BIRCH_AND_OAK.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_FLOWER_FOREST.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_GROVE.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_JUNGLE.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_MEADOW.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_OLD_GROWTH_PINE_TAIGA.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_OLD_GROWTH_SPRUCE_TAIGA.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_PLAINS.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_SAVANNA.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_SNOWY.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_SPARSE_JUNGLE.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_SWAMP.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_TAIGA.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_WATER.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_WINDSWEPT_FOREST.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_WINDSWEPT_HILLS.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.TREES_WINDSWEPT_SAVANNA.toString(), TREE_GENERATION);
        biomeGenerationSettingsStringMap.put(VegetationPlacements.MUSHROOM_ISLAND_VEGETATION.toString(), OVERWORLD_VEGETATION);

        dispenserBlockItemMap.put(Items.ARROW, DISPENSER_FIRES_PROJECTILES);
        dispenserBlockItemMap.put(Items.TIPPED_ARROW, DISPENSER_FIRES_PROJECTILES);
        dispenserBlockItemMap.put(Items.SPECTRAL_ARROW, DISPENSER_FIRES_PROJECTILES);
        dispenserBlockItemMap.put(Items.EGG, DISPENSER_FIRES_PROJECTILES);
        dispenserBlockItemMap.put(Items.SNOWBALL, DISPENSER_FIRES_PROJECTILES);
        dispenserBlockItemMap.put(Items.EXPERIENCE_BOTTLE, DISPENSER_FIRES_PROJECTILES);
        dispenserBlockItemMap.put(Items.SPLASH_POTION, DISPENSER_FIRES_PROJECTILES);
        dispenserBlockItemMap.put(Items.LINGERING_POTION, DISPENSER_FIRES_PROJECTILES);
        for (SpawnEggItem item : SpawnEggItem.eggs()) {
            dispenserBlockItemMap.put(item, DISPENSER_SPAWNS_MOBS);
        }
        dispenserBlockItemMap.put(Items.ARMOR_STAND, DISPENSER_PLACES_ARMOUR_STANDS);
        dispenserBlockItemMap.put(Items.FIREWORK_ROCKET, DISPENSER_LAUNCHES_FIREWORKS);
        dispenserBlockItemMap.put(Items.FIRE_CHARGE, DISPENSER_LAUNCHES_FIRE_CHARGES);
        dispenserBlockItemMap.put(Items.FLINT_AND_STEEL, DISPENSER_FLINTS_AND_STEELS);
        dispenserBlockItemMap.put(Items.BONE_MEAL, DISPENSER_BONEMEALS_PLANTS);
        dispenserBlockItemMap.put(Items.TNT, DISPENSER_LIGHTS_TNT);
        dispenserBlockItemMap.put(Items.SHULKER_BOX, DISPENSER_PLACES_SHULKER_BOXES);
        for (DyeColor colour : DyeColor.values()) {
            dispenserBlockItemMap.put(ShulkerBoxBlock.getBlockByColor(colour).asItem(), DISPENSER_PLACES_SHULKER_BOXES);
        }
        dispenserBlockItemMap.put(Items.GLASS_BOTTLE, DISPENSER_FILLS_BOTTLES);
        dispenserBlockItemMap.put(Items.GLOWSTONE, DISPENSER_FILLS_RESPAWN_ANCHOR);
        dispenserBlockItemMap.put(Items.SHEARS, DISPENSER_SHEARS_SHEEP);
        dispenserBlockItemMap.put(Items.HONEYCOMB, DISPENSER_WAXES_COPPER);
        dispenserBlockItemMap.put(Items.POTION, DISPENSER_WATERS_MUD);
        dispenserBlockItemMap.put(Items.SADDLE, DISPENSER_EQUIPS_ARMOUR);
        dispenserBlockItemMap.put(Items.LEATHER_HORSE_ARMOR, DISPENSER_EQUIPS_ARMOUR);
        dispenserBlockItemMap.put(Items.IRON_HORSE_ARMOR, DISPENSER_EQUIPS_ARMOUR);
        dispenserBlockItemMap.put(Items.GOLDEN_HORSE_ARMOR, DISPENSER_EQUIPS_ARMOUR);
        dispenserBlockItemMap.put(Items.DIAMOND_HORSE_ARMOR, DISPENSER_EQUIPS_ARMOUR);
        dispenserBlockItemMap.put(Items.WHITE_CARPET, DISPENSER_EQUIPS_ARMOUR);
        dispenserBlockItemMap.put(Items.ORANGE_CARPET, DISPENSER_EQUIPS_ARMOUR);
        dispenserBlockItemMap.put(Items.CYAN_CARPET, DISPENSER_EQUIPS_ARMOUR);
        dispenserBlockItemMap.put(Items.BLUE_CARPET, DISPENSER_EQUIPS_ARMOUR);
        dispenserBlockItemMap.put(Items.BROWN_CARPET, DISPENSER_EQUIPS_ARMOUR);
        dispenserBlockItemMap.put(Items.BLACK_CARPET, DISPENSER_EQUIPS_ARMOUR);
        dispenserBlockItemMap.put(Items.GRAY_CARPET, DISPENSER_EQUIPS_ARMOUR);
        dispenserBlockItemMap.put(Items.GREEN_CARPET, DISPENSER_EQUIPS_ARMOUR);
        dispenserBlockItemMap.put(Items.LIGHT_BLUE_CARPET, DISPENSER_EQUIPS_ARMOUR);
        dispenserBlockItemMap.put(Items.LIGHT_GRAY_CARPET, DISPENSER_EQUIPS_ARMOUR);
        dispenserBlockItemMap.put(Items.LIME_CARPET, DISPENSER_EQUIPS_ARMOUR);
        dispenserBlockItemMap.put(Items.MAGENTA_CARPET, DISPENSER_EQUIPS_ARMOUR);
        dispenserBlockItemMap.put(Items.PINK_CARPET, DISPENSER_EQUIPS_ARMOUR);
        dispenserBlockItemMap.put(Items.PURPLE_CARPET, DISPENSER_EQUIPS_ARMOUR);
        dispenserBlockItemMap.put(Items.RED_CARPET, DISPENSER_EQUIPS_ARMOUR);
        dispenserBlockItemMap.put(Items.YELLOW_CARPET, DISPENSER_EQUIPS_ARMOUR);
        dispenserBlockItemMap.put(Items.CHEST, DISPENSER_EQUIPS_ARMOUR);
        dispenserBlockItemMap.put(Items.OAK_BOAT, DISPENSER_PLACES_BOATS);
        dispenserBlockItemMap.put(Items.SPRUCE_BOAT, DISPENSER_PLACES_BOATS);
        dispenserBlockItemMap.put(Items.BIRCH_BOAT, DISPENSER_PLACES_BOATS);
        dispenserBlockItemMap.put(Items.JUNGLE_BOAT, DISPENSER_PLACES_BOATS);
        dispenserBlockItemMap.put(Items.DARK_OAK_BOAT, DISPENSER_PLACES_BOATS);
        dispenserBlockItemMap.put(Items.ACACIA_BOAT, DISPENSER_PLACES_BOATS);
        dispenserBlockItemMap.put(Items.MANGROVE_BOAT, DISPENSER_PLACES_BOATS);
        dispenserBlockItemMap.put(Items.OAK_CHEST_BOAT, DISPENSER_PLACES_BOATS);
        dispenserBlockItemMap.put(Items.SPRUCE_CHEST_BOAT, DISPENSER_PLACES_BOATS);
        dispenserBlockItemMap.put(Items.BIRCH_CHEST_BOAT, DISPENSER_PLACES_BOATS);
        dispenserBlockItemMap.put(Items.JUNGLE_CHEST_BOAT, DISPENSER_PLACES_BOATS);
        dispenserBlockItemMap.put(Items.DARK_OAK_CHEST_BOAT, DISPENSER_PLACES_BOATS);
        dispenserBlockItemMap.put(Items.ACACIA_CHEST_BOAT, DISPENSER_PLACES_BOATS);
        dispenserBlockItemMap.put(Items.MANGROVE_CHEST_BOAT, DISPENSER_PLACES_BOATS);
        dispenserBlockItemMap.put(Items.LAVA_BUCKET, DISPENSER_BUCKETS_ITEMS);
        dispenserBlockItemMap.put(Items.WATER_BUCKET, DISPENSER_BUCKETS_ITEMS);
        dispenserBlockItemMap.put(Items.POWDER_SNOW_BUCKET, DISPENSER_BUCKETS_ITEMS);
        dispenserBlockItemMap.put(Items.SALMON_BUCKET, DISPENSER_BUCKETS_ITEMS);
        dispenserBlockItemMap.put(Items.COD_BUCKET, DISPENSER_BUCKETS_ITEMS);
        dispenserBlockItemMap.put(Items.PUFFERFISH_BUCKET, DISPENSER_BUCKETS_ITEMS);
        dispenserBlockItemMap.put(Items.TROPICAL_FISH_BUCKET, DISPENSER_BUCKETS_ITEMS);
        dispenserBlockItemMap.put(Items.AXOLOTL_BUCKET, DISPENSER_BUCKETS_ITEMS);
        dispenserBlockItemMap.put(Items.TADPOLE_BUCKET, DISPENSER_BUCKETS_ITEMS);
        dispenserBlockItemMap.put(Items.BUCKET, DISPENSER_BUCKETS_ITEMS);
        dispenserBlockItemMap.put(Items.CREEPER_HEAD, DISPENSER_PLACES_HEADS);
        dispenserBlockItemMap.put(Items.ZOMBIE_HEAD, DISPENSER_PLACES_HEADS);
        dispenserBlockItemMap.put(Items.DRAGON_HEAD, DISPENSER_PLACES_HEADS);
        dispenserBlockItemMap.put(Items.SKELETON_SKULL, DISPENSER_PLACES_HEADS);
        dispenserBlockItemMap.put(Items.PLAYER_HEAD, DISPENSER_PLACES_HEADS);
        dispenserBlockItemMap.put(Items.WITHER_SKELETON_SKULL, DISPENSER_PLACES_HEADS);
        dispenserBlockItemMap.put(Items.CARVED_PUMPKIN, DISPENSER_PLACES_HEADS);
        dispenserBlockItemMap.put(Items.MINECART, DISPENSER_PLACES_MINECARTS);
        dispenserBlockItemMap.put(Items.COMMAND_BLOCK_MINECART, DISPENSER_PLACES_MINECARTS);
        dispenserBlockItemMap.put(Items.CHEST_MINECART, DISPENSER_PLACES_MINECARTS);
        dispenserBlockItemMap.put(Items.FURNACE_MINECART, DISPENSER_PLACES_MINECARTS);
        dispenserBlockItemMap.put(Items.HOPPER_MINECART, DISPENSER_PLACES_MINECARTS);
        dispenserBlockItemMap.put(Items.TNT_MINECART, DISPENSER_PLACES_MINECARTS);

        arrowPotionMap.put(Potions.FIRE_RESISTANCE, FIRE_RESISTANCE_TIPPED_ARROW);
        arrowPotionMap.put(Potions.LONG_FIRE_RESISTANCE, FIRE_RESISTANCE_TIPPED_ARROW);
        arrowPotionMap.put(Potions.HARMING, HARMING_TIPPED_ARROW);
        arrowPotionMap.put(Potions.STRONG_HARMING, HARMING_TIPPED_ARROW);
        arrowPotionMap.put(Potions.HEALING, HEALING_TIPPED_ARROW);
        arrowPotionMap.put(Potions.STRONG_HEALING, HEALING_TIPPED_ARROW);
        arrowPotionMap.put(Potions.INVISIBILITY, INVISIBILITY_TIPPED_ARROW);
        arrowPotionMap.put(Potions.LONG_INVISIBILITY, INVISIBILITY_TIPPED_ARROW);
        arrowPotionMap.put(Potions.LEAPING, LEAPING_TIPPED_ARROW);
        arrowPotionMap.put(Potions.LONG_LEAPING, LEAPING_TIPPED_ARROW);
        arrowPotionMap.put(Potions.STRONG_LEAPING, LEAPING_TIPPED_ARROW);
        arrowPotionMap.put(Potions.LUCK, LUCK_TIPPED_ARROW);
        arrowPotionMap.put(Potions.NIGHT_VISION, NIGHT_VISION_TIPPED_ARROW);
        arrowPotionMap.put(Potions.LONG_NIGHT_VISION, NIGHT_VISION_TIPPED_ARROW);
        arrowPotionMap.put(Potions.POISON, POISON_TIPPED_ARROW);
        arrowPotionMap.put(Potions.LONG_POISON, POISON_TIPPED_ARROW);
        arrowPotionMap.put(Potions.STRONG_POISON, POISON_TIPPED_ARROW);
        arrowPotionMap.put(Potions.REGENERATION, REGENERATION_TIPPED_ARROW);
        arrowPotionMap.put(Potions.LONG_REGENERATION, REGENERATION_TIPPED_ARROW);
        arrowPotionMap.put(Potions.STRONG_REGENERATION, REGENERATION_TIPPED_ARROW);
        arrowPotionMap.put(Potions.SLOW_FALLING, SLOW_FALLING_TIPPED_ARROW);
        arrowPotionMap.put(Potions.LONG_SLOW_FALLING, SLOW_FALLING_TIPPED_ARROW);
        arrowPotionMap.put(Potions.SLOWNESS, SLOWNESS_TIPPED_ARROW);
        arrowPotionMap.put(Potions.LONG_SLOWNESS, SLOWNESS_TIPPED_ARROW);
        arrowPotionMap.put(Potions.STRONG_SLOWNESS, SLOWNESS_TIPPED_ARROW);
        arrowPotionMap.put(Potions.STRENGTH, STRENGTH_TIPPED_ARROW);
        arrowPotionMap.put(Potions.LONG_STRENGTH, STRENGTH_TIPPED_ARROW);
        arrowPotionMap.put(Potions.STRONG_STRENGTH, STRENGTH_TIPPED_ARROW);
        arrowPotionMap.put(Potions.SWIFTNESS, SWIFTNESS_TIPPED_ARROW);
        arrowPotionMap.put(Potions.LONG_SWIFTNESS, SWIFTNESS_TIPPED_ARROW);
        arrowPotionMap.put(Potions.STRONG_SWIFTNESS, SWIFTNESS_TIPPED_ARROW);
        arrowPotionMap.put(Potions.TURTLE_MASTER, TURTLE_MASTER_TIPPED_ARROW);
        arrowPotionMap.put(Potions.LONG_TURTLE_MASTER, TURTLE_MASTER_TIPPED_ARROW);
        arrowPotionMap.put(Potions.STRONG_TURTLE_MASTER, TURTLE_MASTER_TIPPED_ARROW);
        arrowPotionMap.put(Potions.WATER_BREATHING, WATER_BREATHING_TIPPED_ARROW);
        arrowPotionMap.put(Potions.LONG_WATER_BREATHING, WATER_BREATHING_TIPPED_ARROW);
        arrowPotionMap.put(Potions.WEAKNESS, WEAKNESS_TIPPED_ARROW);
        arrowPotionMap.put(Potions.LONG_WEAKNESS, WEAKNESS_TIPPED_ARROW);

        goalClassMap.put(Bee.BeeAttackGoal.class, BEE_AI);
        goalClassMap.put(Bee.BaseBeeGoal.class, BEE_AI);
        goalClassMap.put(Bee.BeeEnterHiveGoal.class, BEE_AI);
        goalClassMap.put(Bee.BeeGoToHiveGoal.class, BEE_AI);
        goalClassMap.put(Bee.BeeGoToKnownFlowerGoal.class, BEE_AI);
        goalClassMap.put(Bee.BeeGrowCropGoal.class, BEE_AI);
        goalClassMap.put(Bee.BeeHurtByOtherGoal.class, BEE_AI);
        goalClassMap.put(Bee.BeeLocateHiveGoal.class, BEE_AI);
        goalClassMap.put(Bee.BeePollinateGoal.class, BEE_AI);
        goalClassMap.put(Bee.BeeWanderGoal.class, BEE_AI);
        goalClassMap.put(Blaze.BlazeAttackGoal.class, BLAZE_AI);
        goalClassMap.put(CatLieOnBedGoal.class, CAT_AI);
        goalClassMap.put(Cat.CatRelaxOnOwnerGoal.class, CAT_AI);
        goalClassMap.put(CatSitOnBlockGoal.class, CAT_AI);
        goalClassMap.put(Cat.CatTemptGoal.class, CAT_AI);
        goalClassMap.put(DolphinJumpGoal.class, DOLPHIN_AI);
        goalClassMap.put(Dolphin.DolphinSwimToTreasureGoal.class, DOLPHIN_AI);
        goalClassMap.put(Dolphin.DolphinSwimWithPlayerGoal.class, DOLPHIN_AI);
        goalClassMap.put(Dolphin.PlayWithItemsGoal.class, DOLPHIN_AI);
        goalClassMap.put(Drowned.DrownedAttackGoal.class, DROWNED_AI);
        goalClassMap.put(Drowned.DrownedGoToBeachGoal.class, DROWNED_AI);
        goalClassMap.put(Drowned.DrownedGoToWaterGoal.class, DROWNED_AI);
        goalClassMap.put(Drowned.DrownedSwimUpGoal.class, DROWNED_AI);
        goalClassMap.put(Drowned.DrownedTridentAttackGoal.class, DROWNED_AI);
        goalClassMap.put(EnderMan.EndermanFreezeWhenLookedAt.class, ENDERMAN_AI);
        goalClassMap.put(EnderMan.EndermanLeaveBlockGoal.class, ENDERMAN_AI);
        goalClassMap.put(EnderMan.EndermanTakeBlockGoal.class, ENDERMAN_AI);
        goalClassMap.put(AbstractFish.FishSwimGoal.class, FISH_AI);
        goalClassMap.put(Fox.FaceplantGoal.class, FOX_AI);
        goalClassMap.put(Fox.FoxBehaviorGoal.class, FOX_AI);
        goalClassMap.put(Fox.FoxBreedGoal.class, FOX_AI);
        goalClassMap.put(Fox.FoxEatBerriesGoal.class, FOX_AI);
        goalClassMap.put(Fox.FoxLookAtPlayerGoal.class, FOX_AI);
        goalClassMap.put(Fox.FoxMeleeAttackGoal.class, FOX_AI);
        goalClassMap.put(Fox.FoxPanicGoal.class, FOX_AI);
        goalClassMap.put(Fox.FoxPounceGoal.class, FOX_AI);
        goalClassMap.put(Fox.FoxSearchForItemsGoal.class, FOX_AI);
        goalClassMap.put(Fox.FoxStrollThroughVillageGoal.class, FOX_AI);
        goalClassMap.put(Fox.PerchAndSearchGoal.class, FOX_AI);
        goalClassMap.put(Fox.SeekShelterGoal.class, FOX_AI);
        goalClassMap.put(Fox.SleepGoal.class, FOX_AI);
        goalClassMap.put(Fox.StalkPreyGoal.class, FOX_AI);
        goalClassMap.put(Ghast.GhastLookGoal.class, GHAST_AI);
        goalClassMap.put(Ghast.GhastShootFireballGoal.class, GHAST_AI);
        goalClassMap.put(Ghast.RandomFloatAroundGoal.class, GHAST_AI);
        goalClassMap.put(GolemRandomStrollInVillageGoal.class, GOLEM_AI);
        goalClassMap.put(Guardian.GuardianAttackGoal.class, GUARDIAN_AI);
        goalClassMap.put(Llama.LlamaAttackWolfGoal.class, LLAMA_AI);
        goalClassMap.put(LlamaFollowCaravanGoal.class, LLAMA_AI);
        goalClassMap.put(Llama.LlamaHurtByTargetGoal.class, LLAMA_AI);
        goalClassMap.put(TraderLlama.TraderLlamaDefendWanderingTraderGoal.class, LLAMA_AI);
        goalClassMap.put(OcelotAttackGoal.class, OCELOT_AI);
        goalClassMap.put(Ocelot.OcelotTemptGoal.class, OCELOT_AI);
        goalClassMap.put(Panda.PandaAttackGoal.class, PANDA_AI);
        goalClassMap.put(Panda.PandaBreedGoal.class, PANDA_AI);
        goalClassMap.put(Panda.PandaHurtByTargetGoal.class, PANDA_AI);
        goalClassMap.put(Panda.PandaLieOnBackGoal.class, PANDA_AI);
        goalClassMap.put(Panda.PandaLookAtPlayerGoal.class, PANDA_AI);
        goalClassMap.put(Panda.PandaPanicGoal.class, PANDA_AI);
        goalClassMap.put(Panda.PandaRollGoal.class, PANDA_AI);
        goalClassMap.put(Panda.PandaSitGoal.class, PANDA_AI);
        goalClassMap.put(Panda.PandaSneezeGoal.class, PANDA_AI);
        goalClassMap.put(Parrot.ParrotWanderGoal.class, PARROT_AI);
        goalClassMap.put(Phantom.PhantomAttackPlayerTargetGoal.class, PHANTOM_AI);
        goalClassMap.put(Phantom.PhantomAttackStrategyGoal.class, PHANTOM_AI);
        goalClassMap.put(Phantom.PhantomMoveTargetGoal.class, PHANTOM_AI);
        goalClassMap.put(PolarBear.PolarBearAttackPlayersGoal.class, POLAR_BEAR_AI);
        goalClassMap.put(PolarBear.PolarBearHurtByTargetGoal.class, POLAR_BEAR_AI);
        goalClassMap.put(PolarBear.PolarBearMeleeAttackGoal.class, POLAR_BEAR_AI);
        goalClassMap.put(PolarBear.PolarBearPanicGoal.class, POLAR_BEAR_AI);
        goalClassMap.put(Pufferfish.PufferfishPuffGoal.class, PUFFERFISH_AI);
        goalClassMap.put(Rabbit.EvilRabbitAttackGoal.class, RABBIT_AI);
        goalClassMap.put(Rabbit.RabbitAvoidEntityGoal.class, RABBIT_AI);
        goalClassMap.put(Rabbit.RabbitPanicGoal.class, RABBIT_AI);
        goalClassMap.put(Rabbit.RaidGardenGoal.class, RABBIT_AI);
        goalClassMap.put(Evoker.EvokerAttackSpellGoal.class, RAIDER_AI);
        goalClassMap.put(Evoker.EvokerCastingSpellGoal.class, RAIDER_AI);
        goalClassMap.put(Evoker.EvokerSummonSpellGoal.class, RAIDER_AI);
        goalClassMap.put(Evoker.EvokerWololoSpellGoal.class, RAIDER_AI);
        goalClassMap.put(Illusioner.IllusionerBlindnessSpellGoal.class, RAIDER_AI);
        goalClassMap.put(Illusioner.IllusionerMirrorSpellGoal.class, RAIDER_AI);
        goalClassMap.put(Raider.HoldGroundAttackGoal.class, RAIDER_AI);
        goalClassMap.put(Raider.ObtainRaidLeaderBannerGoal.class, RAIDER_AI);
        goalClassMap.put(Raider.RaiderCelebration.class, RAIDER_AI);
        goalClassMap.put(Raider.RaiderMoveThroughVillageGoal.class, RAIDER_AI);
        goalClassMap.put(Vex.VexChargeAttackGoal.class, RAIDER_AI);
        goalClassMap.put(Vex.VexCopyOwnerTargetGoal.class, RAIDER_AI);
        goalClassMap.put(Vex.VexRandomMoveGoal.class, RAIDER_AI);
        goalClassMap.put(Vindicator.VindicatorBreakDoorGoal.class, RAIDER_AI);
        goalClassMap.put(Vindicator.VindicatorJohnnyAttackGoal.class, RAIDER_AI);
        goalClassMap.put(Vindicator.VindicatorMeleeAttackGoal.class, RAIDER_AI);
        goalClassMap.put(Ravager.RavagerMeleeAttackGoal.class, RAIDER_AI);
        goalClassMap.put(Shulker.ShulkerAttackGoal.class, SHULKER_AI);
        goalClassMap.put(Shulker.ShulkerDefenseAttackGoal.class, SHULKER_AI);
        goalClassMap.put(Shulker.ShulkerNearestAttackGoal.class, SHULKER_AI);
        goalClassMap.put(Shulker.ShulkerPeekGoal.class, SHULKER_AI);
        goalClassMap.put(Silverfish.SilverfishMergeWithStoneGoal.class, SILVERFISH_AI);
        goalClassMap.put(Silverfish.SilverfishWakeUpFriendsGoal.class, SILVERFISH_AI);
        goalClassMap.put(Slime.SlimeAttackGoal.class, SLIME_AI);
        goalClassMap.put(Slime.SlimeFloatGoal.class, SLIME_AI);
        goalClassMap.put(Slime.SlimeKeepOnJumpingGoal.class, SLIME_AI);
        goalClassMap.put(Slime.SlimeRandomDirectionGoal.class, SLIME_AI);
        goalClassMap.put(Spider.SpiderAttackGoal.class, SPIDER_AI);
        goalClassMap.put(Spider.SpiderTargetGoal.class, SPIDER_AI);
        goalClassMap.put(Squid.SquidRandomMovementGoal.class, SQUID_AI);
        goalClassMap.put(Squid.SquidFleeGoal.class, SQUID_AI);
        goalClassMap.put(Strider.StriderGoToLavaGoal.class, STRIDER_AI);
        goalClassMap.put(Turtle.TurtleBreedGoal.class, TURTLE_AI);
        goalClassMap.put(Turtle.TurtleGoHomeGoal.class, TURTLE_AI);
        goalClassMap.put(Turtle.TurtleGoToWaterGoal.class, TURTLE_AI);
        goalClassMap.put(Turtle.TurtleLayEggGoal.class, TURTLE_AI);
        goalClassMap.put(Turtle.TurtlePanicGoal.class, TURTLE_AI);
        goalClassMap.put(Turtle.TurtleRandomStrollGoal.class, TURTLE_AI);
        goalClassMap.put(Turtle.TurtleTravelGoal.class, TURTLE_AI);
        goalClassMap.put(Wolf.WolfAvoidEntityGoal.class, WOLF_AI);
        goalClassMap.put(Wolf.WolfPanicGoal.class, WOLF_AI);
        goalClassMap.put(ZombieAttackGoal.class, ZOMBIE_AI);

        structureCheckStructureTypeMap.put(StructureType.BURIED_TREASURE, BURIED_TREASURE_GENERATION);
        structureCheckStructureTypeMap.put(StructureType.DESERT_PYRAMID, DESERT_PYRAMID_GENERATION);
        structureCheckStructureTypeMap.put(StructureType.END_CITY, END_CITY_GENERATION);
        structureCheckStructureTypeMap.put(StructureType.IGLOO, IGLOO_GENERATION);
        structureCheckStructureTypeMap.put(StructureType.JUNGLE_TEMPLE, JUNGLE_PYRAMID_GENERATION);
        structureCheckStructureTypeMap.put(StructureType.MINESHAFT, MINESHAFT_GENERATION);
        structureCheckStructureTypeMap.put(StructureType.FORTRESS, FORTRESS_GENERATION);
        structureCheckStructureTypeMap.put(StructureType.NETHER_FOSSIL, NETHER_FOSSIL_GENERATION);
        structureCheckStructureTypeMap.put(StructureType.OCEAN_MONUMENT, MONUMENT_GENERATION);
        structureCheckStructureTypeMap.put(StructureType.OCEAN_RUIN, OCEAN_RUIN_GENERATION);
        structureCheckStructureTypeMap.put(StructureType.RUINED_PORTAL, RUINED_PORTAL_GENERATION);
        structureCheckStructureTypeMap.put(StructureType.SHIPWRECK, SHIPWRECK_GENERATION);
        structureCheckStructureTypeMap.put(StructureType.STRONGHOLD, STRONGHOLD_GENERATION);
        structureCheckStructureTypeMap.put(StructureType.SWAMP_HUT, SWAMP_HUT_GENERATION);
        structureCheckStructureTypeMap.put(StructureType.WOODLAND_MANSION, MANSION_GENERATION);

        structureCheckStringMap.put("minecraft:ancient_city/city_center", ANCIENT_CITY_GENERATION);
        structureCheckStringMap.put("minecraft:bastion/starts", BASTION_REMNANT_GENERATION);
        structureCheckStringMap.put("minecraft:pillager_outpost/base_plates", PILLAGER_OUTPOST_GENERATION);
        structureCheckStringMap.put("minecraft:village/desert/town_centers", VILLAGE_GENERATION);
        structureCheckStringMap.put("minecraft:village/plains/town_centers", VILLAGE_GENERATION);
        structureCheckStringMap.put("minecraft:village/savanna/town_centers", VILLAGE_GENERATION);
        structureCheckStringMap.put("minecraft:village/snowy/town_centers", VILLAGE_GENERATION);
        structureCheckStringMap.put("minecraft:village/taiga/town_centers", VILLAGE_GENERATION);

        potionUtilsPotionMap.put(Potions.FIRE_RESISTANCE, FIRE_RESISTANCE_POTION);
        potionUtilsPotionMap.put(Potions.LONG_FIRE_RESISTANCE, FIRE_RESISTANCE_POTION);
        potionUtilsPotionMap.put(Potions.HARMING, HARMING_POTION);
        potionUtilsPotionMap.put(Potions.STRONG_HARMING, HARMING_POTION);
        potionUtilsPotionMap.put(Potions.HEALING, HEALING_POTION);
        potionUtilsPotionMap.put(Potions.STRONG_HEALING, HEALING_POTION);
        potionUtilsPotionMap.put(Potions.INVISIBILITY, INVISIBILITY_POTION);
        potionUtilsPotionMap.put(Potions.LONG_INVISIBILITY, INVISIBILITY_POTION);
        potionUtilsPotionMap.put(Potions.LEAPING, LEAPING_POTION);
        potionUtilsPotionMap.put(Potions.LONG_LEAPING, LEAPING_POTION);
        potionUtilsPotionMap.put(Potions.STRONG_LEAPING, LEAPING_POTION);
        potionUtilsPotionMap.put(Potions.LUCK, LUCK_POTION);
        potionUtilsPotionMap.put(Potions.NIGHT_VISION, NIGHT_VISION_POTION);
        potionUtilsPotionMap.put(Potions.LONG_NIGHT_VISION, NIGHT_VISION_POTION);
        potionUtilsPotionMap.put(Potions.POISON, POISON_POTION);
        potionUtilsPotionMap.put(Potions.LONG_POISON, POISON_POTION);
        potionUtilsPotionMap.put(Potions.STRONG_POISON, POISON_POTION);
        potionUtilsPotionMap.put(Potions.REGENERATION, REGENERATION_POTION);
        potionUtilsPotionMap.put(Potions.LONG_REGENERATION, REGENERATION_POTION);
        potionUtilsPotionMap.put(Potions.STRONG_REGENERATION, REGENERATION_POTION);
        potionUtilsPotionMap.put(Potions.SLOW_FALLING, SLOW_FALLING_POTION);
        potionUtilsPotionMap.put(Potions.LONG_SLOW_FALLING, SLOW_FALLING_POTION);
        potionUtilsPotionMap.put(Potions.SLOWNESS, SLOWNESS_POTION);
        potionUtilsPotionMap.put(Potions.LONG_SLOWNESS, SLOWNESS_POTION);
        potionUtilsPotionMap.put(Potions.STRONG_SLOWNESS, SLOWNESS_POTION);
        potionUtilsPotionMap.put(Potions.STRENGTH, STRENGTH_POTION);
        potionUtilsPotionMap.put(Potions.LONG_STRENGTH, STRENGTH_POTION);
        potionUtilsPotionMap.put(Potions.STRONG_STRENGTH, STRENGTH_POTION);
        potionUtilsPotionMap.put(Potions.SWIFTNESS, SWIFTNESS_POTION);
        potionUtilsPotionMap.put(Potions.LONG_SWIFTNESS, SWIFTNESS_POTION);
        potionUtilsPotionMap.put(Potions.STRONG_SWIFTNESS, SWIFTNESS_POTION);
        potionUtilsPotionMap.put(Potions.TURTLE_MASTER, TURTLE_MASTER_POTION);
        potionUtilsPotionMap.put(Potions.LONG_TURTLE_MASTER, TURTLE_MASTER_POTION);
        potionUtilsPotionMap.put(Potions.STRONG_TURTLE_MASTER, TURTLE_MASTER_POTION);
        potionUtilsPotionMap.put(Potions.WATER_BREATHING, WATER_BREATHING_POTION);
        potionUtilsPotionMap.put(Potions.LONG_WATER_BREATHING, WATER_BREATHING_POTION);
        potionUtilsPotionMap.put(Potions.WEAKNESS, WEAKNESS_POTION);
        potionUtilsPotionMap.put(Potions.LONG_WEAKNESS, WEAKNESS_POTION);

        itemStackClassMap.put(Items.OAK_BOAT, BOATS_ENABLED);
        itemStackClassMap.put(Items.SPRUCE_BOAT, BOATS_ENABLED);
        itemStackClassMap.put(Items.BIRCH_BOAT, BOATS_ENABLED);
        itemStackClassMap.put(Items.JUNGLE_BOAT, BOATS_ENABLED);
        itemStackClassMap.put(Items.DARK_OAK_BOAT, BOATS_ENABLED);
        itemStackClassMap.put(Items.ACACIA_BOAT, BOATS_ENABLED);
        itemStackClassMap.put(Items.MANGROVE_BOAT, BOATS_ENABLED);
        itemStackClassMap.put(Items.OAK_CHEST_BOAT, BOATS_ENABLED);
        itemStackClassMap.put(Items.SPRUCE_CHEST_BOAT, BOATS_ENABLED);
        itemStackClassMap.put(Items.BIRCH_CHEST_BOAT, BOATS_ENABLED);
        itemStackClassMap.put(Items.JUNGLE_CHEST_BOAT, BOATS_ENABLED);
        itemStackClassMap.put(Items.DARK_OAK_CHEST_BOAT, BOATS_ENABLED);
        itemStackClassMap.put(Items.ACACIA_CHEST_BOAT, BOATS_ENABLED);
        itemStackClassMap.put(Items.MANGROVE_CHEST_BOAT, BOATS_ENABLED);
        itemStackClassMap.put(Items.GLASS_BOTTLE, BOTTLES_ENABLED);
        itemStackClassMap.put(Items.BOW, BOWS_ENABLED);
        itemStackClassMap.put(Items.BUCKET, BUCKETS_ENABLED);
        itemStackClassMap.put(Items.WATER_BUCKET, BUCKETS_ENABLED);
        itemStackClassMap.put(Items.LAVA_BUCKET, BUCKETS_ENABLED);
        itemStackClassMap.put(Items.POWDER_SNOW_BUCKET, BUCKETS_ENABLED);
        itemStackClassMap.put(Items.COD_BUCKET, BUCKETS_ENABLED);
        itemStackClassMap.put(Items.AXOLOTL_BUCKET, BUCKETS_ENABLED);
        itemStackClassMap.put(Items.PUFFERFISH_BUCKET, BUCKETS_ENABLED);
        itemStackClassMap.put(Items.SALMON_BUCKET, BUCKETS_ENABLED);
        itemStackClassMap.put(Items.TADPOLE_BUCKET, BUCKETS_ENABLED);
        itemStackClassMap.put(Items.TROPICAL_FISH_BUCKET, BUCKETS_ENABLED);
        itemStackClassMap.put(Items.BUNDLE, BUNDLES_ENABLED);
        itemStackClassMap.put(Items.CROSSBOW, CROSSBOWS_ENABLED);
        itemStackClassMap.put(Items.EGG, EGGS_ENABLED);
        itemStackClassMap.put(Items.MAP, MAPS_ENABLED);
        itemStackClassMap.put(Items.FILLED_MAP, MAPS_ENABLED);
        itemStackClassMap.put(Items.ENDER_EYE, ENDER_EYES_ENABLED);
        itemStackClassMap.put(Items.ENDER_PEARL, ENDER_PEARLS_ENABLED);
        itemStackClassMap.put(Items.EXPERIENCE_BOTTLE, EXPERIENCE_BOTTLES_ENABLED);
        itemStackClassMap.put(Items.FIREWORK_ROCKET, FIREWORKS_ENABLED);
        itemStackClassMap.put(Items.FISHING_ROD, FISHING_ENABLED);
        itemStackClassMap.put(Items.CARROT_ON_A_STICK, FOOD_ON_STICKS_ENABLED);
        itemStackClassMap.put(Items.WARPED_FUNGUS_ON_A_STICK, FOOD_ON_STICKS_ENABLED);
        itemStackClassMap.put(Items.GOAT_HORN, GOAT_HORNS_ENABLED);
        itemStackClassMap.put(Items.KNOWLEDGE_BOOK, BOOKS_ENABLED);
        itemStackClassMap.put(Items.SHIELD, SHIELDS_ENABLED);
        itemStackClassMap.put(Items.SNOWBALL, SNOWBALLS_ENABLED);
        itemStackClassMap.put(Items.SPYGLASS, SPYGLASSES_ENABLED);
        itemStackClassMap.put(Items.TRIDENT, TRIDENTS_ENABLED);
        itemStackClassMap.put(Items.WRITABLE_BOOK, BOOKS_ENABLED);
        itemStackClassMap.put(Items.WRITTEN_BOOK, BOOKS_ENABLED);
        itemStackClassMap.put(Items.WOODEN_AXE, AXES_ENABLED);
        itemStackClassMap.put(Items.STONE_AXE, AXES_ENABLED);
        itemStackClassMap.put(Items.IRON_AXE, AXES_ENABLED);
        itemStackClassMap.put(Items.GOLDEN_AXE, AXES_ENABLED);
        itemStackClassMap.put(Items.DIAMOND_AXE, AXES_ENABLED);
        itemStackClassMap.put(Items.NETHERITE_AXE, AXES_ENABLED);
        itemStackClassMap.put(Items.BONE_MEAL, BONE_MEAL_ENABLED);
        itemStackClassMap.put(Items.COMPASS, COMPASSES_ENABLED);
        itemStackClassMap.put(Items.END_CRYSTAL, END_CRYSTALS_ENABLED);
        itemStackClassMap.put(Items.FIRE_CHARGE, FIRE_CHARGES_ENABLED);
        itemStackClassMap.put(Items.FLINT_AND_STEEL, FLINT_AND_STEEL_ENABLED);
        itemStackClassMap.put(Items.ITEM_FRAME, HANGING_ENTITIES_ENABLED);
        itemStackClassMap.put(Items.GLOW_ITEM_FRAME, HANGING_ENTITIES_ENABLED);
        itemStackClassMap.put(Items.PAINTING, HANGING_ENTITIES_ENABLED);
        itemStackClassMap.put(Items.WOODEN_HOE, HOES_ENABLED);
        itemStackClassMap.put(Items.STONE_HOE, HOES_ENABLED);
        itemStackClassMap.put(Items.IRON_HOE, HOES_ENABLED);
        itemStackClassMap.put(Items.GOLDEN_HOE, HOES_ENABLED);
        itemStackClassMap.put(Items.DIAMOND_HOE, HOES_ENABLED);
        itemStackClassMap.put(Items.NETHERITE_HOE, HOES_ENABLED);
        itemStackClassMap.put(Items.HONEYCOMB, HONEYCOMBS_ENABLED);
        itemStackClassMap.put(Items.LEAD, LEADS_ENABLED);
        itemStackClassMap.put(Items.MINECART, MINECARTS_ENABLED);
        itemStackClassMap.put(Items.COMMAND_BLOCK_MINECART, MINECARTS_ENABLED);
        itemStackClassMap.put(Items.CHEST_MINECART, MINECARTS_ENABLED);
        itemStackClassMap.put(Items.FURNACE_MINECART, MINECARTS_ENABLED);
        itemStackClassMap.put(Items.HOPPER_MINECART, MINECARTS_ENABLED);
        itemStackClassMap.put(Items.TNT_MINECART, MINECARTS_ENABLED);
        itemStackClassMap.put(Items.MUSIC_DISC_5, RECORDS_ENABLED);
        itemStackClassMap.put(Items.MUSIC_DISC_11, RECORDS_ENABLED);
        itemStackClassMap.put(Items.MUSIC_DISC_13, RECORDS_ENABLED);
        itemStackClassMap.put(Items.MUSIC_DISC_CAT, RECORDS_ENABLED);
        itemStackClassMap.put(Items.MUSIC_DISC_BLOCKS, RECORDS_ENABLED);
        itemStackClassMap.put(Items.MUSIC_DISC_CHIRP, RECORDS_ENABLED);
        itemStackClassMap.put(Items.MUSIC_DISC_FAR, RECORDS_ENABLED);
        itemStackClassMap.put(Items.MUSIC_DISC_MALL, RECORDS_ENABLED);
        itemStackClassMap.put(Items.MUSIC_DISC_MELLOHI, RECORDS_ENABLED);
        itemStackClassMap.put(Items.MUSIC_DISC_OTHERSIDE, RECORDS_ENABLED);
        itemStackClassMap.put(Items.MUSIC_DISC_PIGSTEP, RECORDS_ENABLED);
        itemStackClassMap.put(Items.MUSIC_DISC_STAL, RECORDS_ENABLED);
        itemStackClassMap.put(Items.MUSIC_DISC_STRAD, RECORDS_ENABLED);
        itemStackClassMap.put(Items.MUSIC_DISC_WAIT, RECORDS_ENABLED);
        itemStackClassMap.put(Items.MUSIC_DISC_WARD, RECORDS_ENABLED);
        itemStackClassMap.put(Items.SHEARS, SHEARS_ENABLED);
        itemStackClassMap.put(Items.WOODEN_SHOVEL, SHOVELS_ENABLED);
        itemStackClassMap.put(Items.STONE_SHOVEL, SHOVELS_ENABLED);
        itemStackClassMap.put(Items.IRON_SHOVEL, SHOVELS_ENABLED);
        itemStackClassMap.put(Items.GOLDEN_SHOVEL, SHOVELS_ENABLED);
        itemStackClassMap.put(Items.DIAMOND_SHOVEL, SHOVELS_ENABLED);
        itemStackClassMap.put(Items.NETHERITE_SHOVEL, SHOVELS_ENABLED);
        itemStackClassMap.put(Items.BLACK_DYE, DYES_ENABLED);
        itemStackClassMap.put(Items.BLUE_DYE, DYES_ENABLED);
        itemStackClassMap.put(Items.BROWN_DYE, DYES_ENABLED);
        itemStackClassMap.put(Items.CYAN_DYE, DYES_ENABLED);
        itemStackClassMap.put(Items.GRAY_DYE, DYES_ENABLED);
        itemStackClassMap.put(Items.GREEN_DYE, DYES_ENABLED);
        itemStackClassMap.put(Items.LIGHT_BLUE_DYE, DYES_ENABLED);
        itemStackClassMap.put(Items.LIGHT_GRAY_DYE, DYES_ENABLED);
        itemStackClassMap.put(Items.LIME_DYE, DYES_ENABLED);
        itemStackClassMap.put(Items.MAGENTA_DYE, DYES_ENABLED);
        itemStackClassMap.put(Items.ORANGE_DYE, DYES_ENABLED);
        itemStackClassMap.put(Items.PINK_DYE, DYES_ENABLED);
        itemStackClassMap.put(Items.PURPLE_DYE, DYES_ENABLED);
        itemStackClassMap.put(Items.RED_DYE, DYES_ENABLED);
        itemStackClassMap.put(Items.WHITE_DYE, DYES_ENABLED);
        itemStackClassMap.put(Items.YELLOW_DYE, DYES_ENABLED);
        itemStackClassMap.put(Items.NAME_TAG, NAMETAGS_ENABLED);
        itemStackClassMap.put(Items.SADDLE, SADDLES_ENABLED);
        itemStackClassMap.put(Items.CHORUS_FRUIT, CHORUS_FRUIT_EFFECTS_ENABLED);
        itemStackClassMap.put(Items.HONEY_BOTTLE, HONEY_BOTTLE_EFFECTS_ENABLED);
        itemStackClassMap.put(Items.MILK_BUCKET, MILK_BUCKET_EFFECTS_ENABLED);
        itemStackClassMap.put(Items.SUSPICIOUS_STEW, SUSPICIOUS_STEW_EFFECTS_ENABLED);

        serverPlayerStringMap.put("inFire", IN_FIRE_DEATH);
        serverPlayerStringMap.put("lightningBolt", LIGHTNING_BOLT_DEATH);
        serverPlayerStringMap.put("onFire", ON_FIRE_DEATH);
        serverPlayerStringMap.put("lava", LAVA_DEATH);
        serverPlayerStringMap.put("hotFloor", HOT_FLOOR_DEATH);
        serverPlayerStringMap.put("inWall", IN_WALL_DEATH);
        serverPlayerStringMap.put("cramming", CRAMMING_DEATH);
        serverPlayerStringMap.put("drown", DROWNING_DEATH);
        serverPlayerStringMap.put("starve", STARVATION_DEATH);
        serverPlayerStringMap.put("cactus", CACTUS_DEATH);
        serverPlayerStringMap.put("fall", FALLING_DEATH);
        serverPlayerStringMap.put("flyIntoWall", FLY_INTO_WALL_DEATH);
        serverPlayerStringMap.put("outOfWorld", OUT_OF_WORLD_DEATH);
        serverPlayerStringMap.put("magic", MAGIC_DEATH);
        serverPlayerStringMap.put("wither", WITHER_DEATH);
        serverPlayerStringMap.put("anvil", ANVIL_DEATH);
        serverPlayerStringMap.put("fallingBlock", FALLING_BLOCK_DEATH);
        serverPlayerStringMap.put("dragonBreath", DRAGON_BREATH_DEATH);
        serverPlayerStringMap.put("sweetBerryBush", SWEET_BERRY_BUSH_DEATH);
        serverPlayerStringMap.put("freeze", FREEZING_DEATH);
        serverPlayerStringMap.put("fallingStalactite", FALLING_STALACTITE_DEATH);
        serverPlayerStringMap.put("stalagmite", STALAGMITE_DEATH);
        serverPlayerStringMap.put("explosion", EXPLOSION_DEATH);
        serverPlayerStringMap.put("explosion.player", EXPLOSION_DEATH);
        serverPlayerStringMap.put("sting", STINGING_DEATH);
        serverPlayerStringMap.put("mob", MOB_DEATH);
        serverPlayerStringMap.put("player", PLAYER_DEATH);
        serverPlayerStringMap.put("thorns", THORNS_DEATH);
        serverPlayerStringMap.put("sonicBoom", SONIC_BOOM_DEATH);

        commandsStringMap.put("advancement", ADVANCEMENT_COMMAND);
        commandsStringMap.put("attribute", ATTRIBUTE_COMMAND);
        commandsStringMap.put("bossbar", BOSS_BAR_COMMAND);
        commandsStringMap.put("chase", CHASE_COMMAND);
        commandsStringMap.put("clear", CLEAR_COMMAND);
        commandsStringMap.put("clone", CLONE_COMMAND);
        commandsStringMap.put("datapack", DATAPACK_COMMAND);
        commandsStringMap.put("data", DATA_COMMAND);
        commandsStringMap.put("debug", DEBUG_COMMAND);
        commandsStringMap.put("defaultgamemode", DEFAULT_GAMEMODE_COMMAND);
        commandsStringMap.put("difficulty", DIFFICULTY_COMMAND);
        commandsStringMap.put("effect", EFFECT_COMMAND);
        commandsStringMap.put("enchant", ENCHANT_COMMAND);
        commandsStringMap.put("execute", EXECUTE_COMMAND);
        commandsStringMap.put("experience", EXPERIENCE_COMMAND);
        commandsStringMap.put("fill", FILL_COMMAND);
        commandsStringMap.put("forceload", FORCE_LOAD_COMMAND);
        commandsStringMap.put("function", FUNCTION_COMMAND);
        commandsStringMap.put("gamemode", GAME_MODE_COMMAND);
        commandsStringMap.put("give", GIVE_COMMAND);
        commandsStringMap.put("help", HELP_COMMAND);
        commandsStringMap.put("item", ITEM_COMMAND);
        commandsStringMap.put("jfr", JFR_COMMAND);
        commandsStringMap.put("kick", KICK_COMMAND);
        commandsStringMap.put("kill", KILL_COMMAND);
        commandsStringMap.put("list", LIST_COMMAND);
        commandsStringMap.put("locate", LOCATE_COMMAND);
        commandsStringMap.put("loot", LOOT_COMMAND);
        commandsStringMap.put("me", ME_COMMAND);
        commandsStringMap.put("msg", MESSAGE_COMMAND);
        commandsStringMap.put("particle", PARTICLE_COMMAND);
        commandsStringMap.put("place", PLACE_COMMAND);
        commandsStringMap.put("playsound", PLAY_SOUND_COMMAND);
        commandsStringMap.put("publish", PUBLISH_COMMAND);
        commandsStringMap.put("raid", RAID_COMMAND);
        commandsStringMap.put("recipe", RECIPE_COMMAND);
        commandsStringMap.put("reload", RELOAD_COMMAND);
        commandsStringMap.put("resetchunks", RESET_CHUNKS_COMMAND);
        commandsStringMap.put("say", SAY_COMMAND);
        commandsStringMap.put("schedule", SCHEDULE_COMMAND);
        commandsStringMap.put("scoreboard", SCOREBOARD_COMMAND);
        commandsStringMap.put("seed", SEED_COMMAND);
        commandsStringMap.put("setblock", SET_BLOCK_COMMAND);
        commandsStringMap.put("setworldspawn", SET_WORLD_SPAWN_COMMAND);
        commandsStringMap.put("spawnpoint", SPAWN_POINT_COMMAND);
        commandsStringMap.put("spectate", SPECTATE_COMMAND);
        commandsStringMap.put("spreadplayers", SPREAD_PLAYERS_COMMAND);
        commandsStringMap.put("stopsound", STOP_SOUND_COMMAND);
        commandsStringMap.put("summon", SUMMON_COMMAND);
        commandsStringMap.put("tag", TAG_COMMAND);
        commandsStringMap.put("team", TEAM_COMMAND);
        commandsStringMap.put("teammsg", TEAM_MSG_COMMAND);
        commandsStringMap.put("teleport", TELEPORT_COMMAND);
        commandsStringMap.put("tellraw", TELL_RAW_COMMAND);
        commandsStringMap.put("time", TIME_COMMAND);
        commandsStringMap.put("title", TITLE_COMMAND);
        commandsStringMap.put("trigger", TRIGGER_COMMAND);
        commandsStringMap.put("warden_spawn_tracker", WARDEN_SPAWN_TRACKER_COMMAND);
        commandsStringMap.put("weather", WEATHER_COMMAND);
        commandsStringMap.put("worldborder", WORLD_BORDER_COMMAND);

        commandsStringMapDedicated.put("ban", BAN_DEDICATED_COMMAND);
        commandsStringMapDedicated.put("ban-ip", BAN_IP_DEDICATED_COMMAND);
        commandsStringMapDedicated.put("ban-list", BAN_LIST_DEDICATED_COMMAND);
        commandsStringMapDedicated.put("deop", DE_OP_DEDICATED_COMMAND);
        commandsStringMapDedicated.put("op", OP_DEDICATED_COMMAND);
        commandsStringMapDedicated.put("pardon", PARDON_DEDICATED_COMMAND);
        commandsStringMapDedicated.put("pardon-ip", PARDON_IP_DEDICATED_COMMAND);
        commandsStringMapDedicated.put("perf", PERF_DEDICATED_COMMAND);
        commandsStringMapDedicated.put("save-all", SAVE_ALL_DEDICATED_COMMAND);
        commandsStringMapDedicated.put("save-off", SAVE_OFF_DEDICATED_COMMAND);
        commandsStringMapDedicated.put("save-on", SAVE_ON_DEDICATED_COMMAND);
        commandsStringMapDedicated.put("setidletimeout", SET_IDLE_TIMEOUT_DEDICATED_COMMAND);
        commandsStringMapDedicated.put("stop", STOP_DEDICATED_COMMAND);
        commandsStringMapDedicated.put("whitelist", WHITELIST_DEDICATED_COMMAND);

        baseSpawnerClassMap.put(Pig.class, PIG_SPAWNERS);
        baseSpawnerClassMap.put(CaveSpider.class, CAVE_SPIDER_SPAWNERS);
        baseSpawnerClassMap.put(Silverfish.class, SILVERFISH_SPAWNERS);
        baseSpawnerClassMap.put(Zombie.class, ZOMBIE_SPAWNERS);
        baseSpawnerClassMap.put(Chicken.class, ZOMBIE_SPAWNERS);
        baseSpawnerClassMap.put(Skeleton.class, SKELETON_SPAWNERS);
        baseSpawnerClassMap.put(Blaze.class, BLAZE_SPAWNERS);
        baseSpawnerClassMap.put(Spider.class, SPIDER_SPAWNERS);
        baseSpawnerClassMap.put(MagmaCube.class, MAGMA_CUBE_SPAWNERS);

        naturalSpawnerMobCategoryMap.put(MobCategory.MONSTER, MONSTER_SPAWNING);
        naturalSpawnerMobCategoryMap.put(MobCategory.CREATURE, CREATURE_SPAWNING);
        naturalSpawnerMobCategoryMap.put(MobCategory.AMBIENT, AMBIENT_SPAWNING);
        naturalSpawnerMobCategoryMap.put(MobCategory.AXOLOTLS, AXOLOTL_SPAWNING);
        naturalSpawnerMobCategoryMap.put(MobCategory.UNDERGROUND_WATER_CREATURE, GLOWSQUID_SPAWNING);
        naturalSpawnerMobCategoryMap.put(MobCategory.WATER_AMBIENT, WATER_AMBIENT_SPAWNING);
        naturalSpawnerMobCategoryMap.put(MobCategory.WATER_CREATURE, WATER_CREATURE_SPAWNING);

        playerDamageSourceMap.put(DamageSource.LIGHTNING_BOLT, LIGHTNING_DAMAGE);
        playerDamageSourceMap.put(DamageSource.IN_WALL, WALL_DAMAGE);
        playerDamageSourceMap.put(DamageSource.CRAMMING, CRAMMING_DAMAGE);
        playerDamageSourceMap.put(DamageSource.STARVE, STARVATION_DAMAGE);
        playerDamageSourceMap.put(DamageSource.CACTUS, CACTUS_DAMAGE);
        playerDamageSourceMap.put(DamageSource.FLY_INTO_WALL, FLY_INTO_WALL_DAMAGE);
        playerDamageSourceMap.put(DamageSource.WITHER, WITHER_DAMAGE);
        playerDamageSourceMap.put(DamageSource.ANVIL, ANVIL_DAMAGE);
        playerDamageSourceMap.put(DamageSource.DRAGON_BREATH, DRAGON_DAMAGE);
        playerDamageSourceMap.put(DamageSource.SWEET_BERRY_BUSH, SWEET_BERRY_BUSH_DAMAGE);
        playerDamageSourceMap.put(DamageSource.FALLING_STALACTITE, FALLING_STALACTITE_DAMAGE);
        playerDamageSourceMap.put(DamageSource.FALLING_BLOCK, FALLING_BLOCK_DAMAGE);

        foodDataFoodPropertiesMapNutrition.put(Foods.APPLE, APPLE_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.BAKED_POTATO, BAKED_POTATO_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.BEEF, BEEF_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.BEETROOT, BEETROOT_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.BEETROOT_SOUP, BEETROOT_SOUP_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.BREAD, BREAD_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.CARROT, CARROT_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.CHICKEN, CHICKEN_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.CHORUS_FRUIT, CHORUS_FRUIT_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.COD, COD_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.COOKED_BEEF, COOKED_BEEF_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.COOKED_CHICKEN, COOKED_CHICKEN_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.COOKED_COD, COOKED_COD_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.COOKED_MUTTON, COOKED_MUTTON_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.COOKED_PORKCHOP, COOKED_PORKCHOP_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.COOKED_RABBIT, COOKED_RABBIT_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.COOKED_SALMON, COOKED_SALMON_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.COOKIE, COOKIE_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.DRIED_KELP, DRIED_KELP_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.ENCHANTED_GOLDEN_APPLE, ENCHANTED_GOLDEN_APPLE_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.GOLDEN_APPLE, GOLDEN_APPLE_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.GOLDEN_CARROT, GOLDEN_CARROT_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.HONEY_BOTTLE, HONEY_BOTTLE_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.MELON_SLICE, MELON_SLICE_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.MUSHROOM_STEW, MUSHROOM_STEW_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.MUTTON, MUTTON_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.POISONOUS_POTATO, POISONOUS_POTATO_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.PORKCHOP, PORKCHOP_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.POTATO, POTATO_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.PUFFERFISH, PUFFERFISH_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.PUMPKIN_PIE, PUMPKIN_PIE_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.RABBIT, RABBIT_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.RABBIT_STEW, RABBIT_STEW_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.ROTTEN_FLESH, ROTTEN_FLESH_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.SALMON, SALMON_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.SPIDER_EYE, SPIDER_EYE_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.SUSPICIOUS_STEW, SUSPICIOUS_STEW_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.SWEET_BERRIES, SWEET_BERRIES_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.GLOW_BERRIES, GLOW_BERRIES_NUTRITION);
        foodDataFoodPropertiesMapNutrition.put(Foods.TROPICAL_FISH, TROPICAL_FISH_NUTRITION);

        foodDataFoodPropertiesMapSaturation.put(Foods.APPLE, APPLE_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.BAKED_POTATO, BAKED_POTATO_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.BEEF, BEEF_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.BEETROOT, BEETROOT_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.BEETROOT_SOUP, BEETROOT_SOUP_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.BREAD, BREAD_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.CARROT, CARROT_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.CHICKEN, CHICKEN_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.CHORUS_FRUIT, CHORUS_FRUIT_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.COD, COD_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.COOKED_BEEF, COOKED_BEEF_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.COOKED_CHICKEN, COOKED_CHICKEN_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.COOKED_COD, COOKED_COD_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.COOKED_MUTTON, COOKED_MUTTON_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.COOKED_PORKCHOP, COOKED_PORKCHOP_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.COOKED_RABBIT, COOKED_RABBIT_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.COOKED_SALMON, COOKED_SALMON_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.COOKIE, COOKIE_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.DRIED_KELP, DRIED_KELP_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.ENCHANTED_GOLDEN_APPLE, ENCHANTED_GOLDEN_APPLE_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.GOLDEN_APPLE, GOLDEN_APPLE_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.GOLDEN_CARROT, GOLDEN_CARROT_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.HONEY_BOTTLE, HONEY_BOTTLE_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.MELON_SLICE, MELON_SLICE_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.MUSHROOM_STEW, MUSHROOM_STEW_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.MUTTON, MUTTON_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.POISONOUS_POTATO, POISONOUS_POTATO_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.PORKCHOP, PORKCHOP_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.POTATO, POTATO_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.PUFFERFISH, PUFFERFISH_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.PUMPKIN_PIE, PUMPKIN_PIE_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.RABBIT, RABBIT_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.RABBIT_STEW, RABBIT_STEW_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.ROTTEN_FLESH, ROTTEN_FLESH_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.SALMON, SALMON_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.SPIDER_EYE, SPIDER_EYE_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.SUSPICIOUS_STEW, SUSPICIOUS_STEW_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.SWEET_BERRIES, SWEET_BERRIES_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.GLOW_BERRIES, GLOW_BERRIES_SATURATION_MODIFIER);
        foodDataFoodPropertiesMapSaturation.put(Foods.TROPICAL_FISH, TROPICAL_FISH_SATURATION_MODIFIER);

        livingEntityClassMapKnockback.put(Blaze.class, FIREBALL_KNOCKBACK);
        livingEntityClassMapKnockback.put(Ghast.class, FIREBALL_KNOCKBACK);
        livingEntityClassMapKnockback.put(WitherBoss.class, WITHER_SKULL_KNOCKBACK);
        livingEntityClassMapKnockback.put(EnderDragon.class, DRAGON_KNOCKBACK);
        livingEntityClassMapKnockback.put(Llama.class, LLAMA_SPIT_KNOCKBACK);
        livingEntityClassMapKnockback.put(Shulker.class, SHULKER_BULLET_KNOCKBACK);
        livingEntityClassMapKnockback.put(ServerPlayer.class, PLAYER_ATTACK_KNOCKBACK);

        mobClassMapDespawn.put(Monster.class, MONSTERS_DESPAWN);
        mobClassMapDespawn.put(Animal.class, CREATURES_DESPAWN);
        mobClassMapDespawn.put(AmbientCreature.class, AMBIENT_DESPAWN);
        mobClassMapDespawn.put(Axolotl.class, AXOLOTLS_DESPAWN);
        mobClassMapDespawn.put(GlowSquid.class, GLOWSQUIDS_DESPAWN);
        mobClassMapDespawn.put(AbstractFish.class, WATER_AMBIENT_DESPAWN);
        mobClassMapDespawn.put(WaterAnimal.class, WATER_CREATURES_DESPAWN);

        mobCategoryMobCategoryMapMax.put(MobCategory.MONSTER, MONSTER_MAX_DESPAWN);
        mobCategoryMobCategoryMapMax.put(MobCategory.CREATURE, CREATURE_MAX_DESPAWN);
        mobCategoryMobCategoryMapMax.put(MobCategory.AMBIENT, AMBIENT_MAX_DESPAWN);
        mobCategoryMobCategoryMapMax.put(MobCategory.AXOLOTLS, AXOLOTL_MAX_DESPAWN);
        mobCategoryMobCategoryMapMax.put(MobCategory.UNDERGROUND_WATER_CREATURE, GLOWSQUID_MAX_DESPAWN);
        mobCategoryMobCategoryMapMax.put(MobCategory.WATER_AMBIENT, WATER_AMBIENT_MAX_DESPAWN);
        mobCategoryMobCategoryMapMax.put(MobCategory.WATER_CREATURE, WATER_CREATURE_MIN_DESPAWN);

        mobCategoryMobCategoryMapMin.put(MobCategory.MONSTER, MONSTER_MIN_DESPAWN);
        mobCategoryMobCategoryMapMin.put(MobCategory.CREATURE, CREATURE_MIN_DESPAWN);
        mobCategoryMobCategoryMapMin.put(MobCategory.AMBIENT, AMBIENT_MIN_DESPAWN);
        mobCategoryMobCategoryMapMin.put(MobCategory.AXOLOTLS, AXOLOTL_MIN_DESPAWN);
        mobCategoryMobCategoryMapMin.put(MobCategory.UNDERGROUND_WATER_CREATURE, GLOWSQUID_MIN_DESPAWN);
        mobCategoryMobCategoryMapMin.put(MobCategory.WATER_AMBIENT, WATER_AMBIENT_MIN_DESPAWN);
        mobCategoryMobCategoryMapMin.put(MobCategory.WATER_CREATURE, WATER_CREATURE_MAX_DESPAWN);

        mobCategoryMobCategoryMapMobcap.put(MobCategory.MONSTER, MONSTER_MOBCAP);
        mobCategoryMobCategoryMapMobcap.put(MobCategory.CREATURE, CREATURE_MOBCAP);
        mobCategoryMobCategoryMapMobcap.put(MobCategory.AMBIENT, AMBIENT_MOBCAP);
        mobCategoryMobCategoryMapMobcap.put(MobCategory.AXOLOTLS, AXOLOTL_MOBCAP);
        mobCategoryMobCategoryMapMobcap.put(MobCategory.UNDERGROUND_WATER_CREATURE, GLOWSQUID_MOBCAP);
        mobCategoryMobCategoryMapMobcap.put(MobCategory.WATER_AMBIENT, WATER_AMBIENT_MOBCAP);
        mobCategoryMobCategoryMapMobcap.put(MobCategory.WATER_CREATURE, WATER_CREATURE_MOBCAP);

        enchantmentHelperEnchantmentMap.put(Enchantments.AQUA_AFFINITY, AQUA_AFFINITY_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.BANE_OF_ARTHROPODS, BANE_OF_ARTHROPODS_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.BLAST_PROTECTION, BLAST_PROTECTION_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.CHANNELING, CHANNELING_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.DEPTH_STRIDER, DEPTH_STRIDER_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.BLOCK_EFFICIENCY, EFFICIENCY_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.FALL_PROTECTION, FEATHER_FALLING_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.FIRE_ASPECT, FIRE_ASPECT_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.FIRE_PROTECTION, FIRE_PROTECTION_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.FLAMING_ARROWS, FLAME_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.BLOCK_FORTUNE, FORTUNE_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.FROST_WALKER, FROST_WALKER_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.IMPALING, IMPALING_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.INFINITY_ARROWS, INFINITY_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.KNOCKBACK, KNOCKBACK_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.MOB_LOOTING, LOOTING_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.LOYALTY, LOYALTY_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.FISHING_LUCK, LUCK_OF_THE_SEA_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.FISHING_SPEED, LURE_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.MENDING, MENDING_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.MULTISHOT, MULTISHOT_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.PIERCING, PIERCING_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.POWER_ARROWS, POWER_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.PROJECTILE_PROTECTION, PROJECTILE_PROTECTION_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.ALL_DAMAGE_PROTECTION, PROTECTION_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.PUNCH_ARROWS, PUNCH_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.QUICK_CHARGE, QUICK_CHARGE_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.RESPIRATION, RESPIRATION_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.RIPTIDE, RIPTIDE_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.SHARPNESS, SHARPNESS_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.SILK_TOUCH, SILK_TOUCH_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.SMITE, SMITE_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.SOUL_SPEED, SOUL_SPEED_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.SWEEPING_EDGE, SWEEPING_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.SWIFT_SNEAK, SWIFT_SNEAK_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.THORNS, THORNS_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.UNBREAKING, UNBREAKING_ENCHANTMENT);
        enchantmentHelperEnchantmentMap.put(Enchantments.BINDING_CURSE, BINDING_CURSE);
        enchantmentHelperEnchantmentMap.put(Enchantments.VANISHING_CURSE, VANISHING_CURSE);

        mobClassMapToggle.put(Allay.class, ALLAYS_ENABLED);
        mobClassMapToggle.put(Bat.class, BATS_ENABLED);
        mobClassMapToggle.put(Cat.class, CATS_ENABLED);
        mobClassMapToggle.put(Chicken.class, CHICKENS_ENABLED);
        mobClassMapToggle.put(Cod.class, CODS_ENABLED);
        mobClassMapToggle.put(Cow.class, COWS_ENABLED);
        mobClassMapToggle.put(Donkey.class, DONKEYS_ENABLED);
        mobClassMapToggle.put(Fox.class, FOXES_ENABLED);
        mobClassMapToggle.put(Frog.class, FROGS_ENABLED);
        mobClassMapToggle.put(Horse.class, HORSES_ENABLED);
        mobClassMapToggle.put(MushroomCow.class, MOOSHROOMS_ENABLED);
        mobClassMapToggle.put(Mule.class, MULES_ENABLED);
        mobClassMapToggle.put(Ocelot.class, OCELOTS_ENABLED);
        mobClassMapToggle.put(Parrot.class, PARROTS_ENABLED);
        mobClassMapToggle.put(Pig.class, PIGS_ENABLED);
        mobClassMapToggle.put(Pufferfish.class, PUFFERFISH_ENABLED);
        mobClassMapToggle.put(Rabbit.class, RABBITS_ENABLED);
        mobClassMapToggle.put(Salmon.class, SALMONS_ENABLED);
        mobClassMapToggle.put(Sheep.class, SHEEP_ENABLED);
        mobClassMapToggle.put(SkeletonHorse.class, SKELETON_HORSES_ENABLED);
        mobClassMapToggle.put(SnowGolem.class, SNOW_GOLEMS_ENABLED);
        mobClassMapToggle.put(Squid.class, SQUIDS_ENABLED);
        mobClassMapToggle.put(Strider.class, STRIDERS_ENABLED);
        mobClassMapToggle.put(Tadpole.class, TADPOLES_ENABLED);
        mobClassMapToggle.put(TropicalFish.class, TROPICAL_FISH_ENABLED);
        mobClassMapToggle.put(Turtle.class, TURTLES_ENABLED);
        mobClassMapToggle.put(Villager.class, VILLAGERS_ENABLED);
        mobClassMapToggle.put(WanderingTrader.class, WANDERING_TRADERS_ENABLED);
        mobClassMapToggle.put(Bee.class, BEES_ENABLED);
        mobClassMapToggle.put(CaveSpider.class, CAVE_SPIDERS_ENABLED);
        mobClassMapToggle.put(Dolphin.class, DOLPHINS_ENABLED);
        mobClassMapToggle.put(EnderMan.class, ENDERMEN_ENABLED);
        mobClassMapToggle.put(Goat.class, GOATS_ENABLED);
        mobClassMapToggle.put(IronGolem.class, IRON_GOLEMS_ENABLED);
        mobClassMapToggle.put(Llama.class, LLAMAS_ENABLED);
        mobClassMapToggle.put(Panda.class, PANDAS_ENABLED);
        mobClassMapToggle.put(Piglin.class, PIGLINS_ENABLED);
        mobClassMapToggle.put(PolarBear.class, POLAR_BEARS_ENABLED);
        mobClassMapToggle.put(Spider.class, SPIDERS_ENABLED);
        mobClassMapToggle.put(TraderLlama.class, TRADER_LLAMAS_ENABLED);
        mobClassMapToggle.put(Wolf.class, WOLVES_ENABLED);
        mobClassMapToggle.put(ZombifiedPiglin.class, ZOMBIFIED_PIGLINS_ENABLED);
        mobClassMapToggle.put(Blaze.class, BLAZES_ENABLED);
        mobClassMapToggle.put(Creeper.class, CREEPERS_ENABLED);
        mobClassMapToggle.put(Drowned.class, DROWNED_ENABLED);
        mobClassMapToggle.put(ElderGuardian.class, ELDER_GUARDIANS_ENABLED);
        mobClassMapToggle.put(Endermite.class, ENDERMITES_ENABLED);
        mobClassMapToggle.put(Evoker.class, EVOKERS_ENABLED);
        mobClassMapToggle.put(Ghast.class, GHASTS_ENABLED);
        mobClassMapToggle.put(Guardian.class, GUARDIANS_ENABLED);
        mobClassMapToggle.put(Hoglin.class, HOGLINS_ENABLED);
        mobClassMapToggle.put(Husk.class, HUSKS_ENABLED);
        mobClassMapToggle.put(MagmaCube.class, MAGMA_CUBES_ENABLED);
        mobClassMapToggle.put(Phantom.class, PHANTOMS_ENABLED);
        mobClassMapToggle.put(PiglinBrute.class, PIGLIN_BRUTES_ENABLED);
        mobClassMapToggle.put(Pillager.class, PILLAGERS_ENABLED);
        mobClassMapToggle.put(Ravager.class, RAVAGERS_ENABLED);
        mobClassMapToggle.put(Shulker.class, SHULKERS_ENABLED);
        mobClassMapToggle.put(Silverfish.class, SILVERFISH_ENABLED);
        mobClassMapToggle.put(Skeleton.class, SKELETONS_ENABLED);
        mobClassMapToggle.put(Slime.class, SLIMES_ENABLED);
        mobClassMapToggle.put(Stray.class, STRAYS_ENABLED);
        mobClassMapToggle.put(Vex.class, VEXES_ENABLED);
        mobClassMapToggle.put(Vindicator.class, VINDICATORS_ENABLED);
        mobClassMapToggle.put(Warden.class, WARDENS_ENABLED);
        mobClassMapToggle.put(Witch.class, WITCHES_ENABLED);
        mobClassMapToggle.put(WitherSkeleton.class, WITHER_SKELETONS_ENABLED);
        mobClassMapToggle.put(Zoglin.class, ZOGLINS_ENABLED);
        mobClassMapToggle.put(Zombie.class, ZOMBIES_ENABLED);
        mobClassMapToggle.put(ZombieVillager.class, ZOMBIE_VILLAGERS_ENABLED);
        mobClassMapToggle.put(EnderDragon.class, DRAGONS_ENABLED);
        mobClassMapToggle.put(WitherBoss.class, WITHERS_ENABLED);

        playerAdvancementsStringMap.put("advancements.adventure.root.title", ADVENTURE_ADVANCEMENT_ADVENTURE);
        playerAdvancementsStringMap.put("advancements.adventure.sleep_in_bed.title", ADVENTURE_ADVANCEMENT_SWEET_DREAMS);
        playerAdvancementsStringMap.put("advancements.adventure.adventuring_time.title", ADVENTURE_ADVANCEMENT_ADVENTURING_TIME);
        playerAdvancementsStringMap.put("advancements.adventure.trade.title", ADVENTURE_ADVANCEMENT_WHAT_A_DEAL);
        playerAdvancementsStringMap.put("advancements.adventure.trade_at_world_height.title", ADVENTURE_ADVANCEMENT_STAR_TRADER);
        playerAdvancementsStringMap.put("advancements.adventure.kill_a_mob.title", ADVENTURE_ADVANCEMENT_MONSTER_HUNTER);
        playerAdvancementsStringMap.put("advancements.adventure.kill_all_mobs.title", ADVENTURE_ADVANCEMENT_MONSTERS_HUNTED);
        playerAdvancementsStringMap.put("advancements.adventure.shoot_arrow.title", ADVENTURE_ADVANCEMENT_TAKE_AIM);
        playerAdvancementsStringMap.put("advancements.adventure.throw_trident.title", ADVENTURE_ADVANCEMENT_THROWAWAY_JOKE);
        playerAdvancementsStringMap.put("advancements.adventure.very_very_frightening.title", ADVENTURE_ADVANCEMENT_VERY_FRIGHTENING);
        playerAdvancementsStringMap.put("advancements.adventure.summon_iron_golem.title", ADVENTURE_ADVANCEMENT_HIRED_HELP);
        playerAdvancementsStringMap.put("advancements.adventure.sniper_duel.title", ADVENTURE_ADVANCEMENT_SNIPER_DUEL);
        playerAdvancementsStringMap.put("advancements.adventure.totem_of_undying.title", ADVENTURE_ADVANCEMENT_POSTMORTAL);
        playerAdvancementsStringMap.put("advancements.adventure.ol_betsy.title", ADVENTURE_ADVANCEMENT_OLD_BETSY);
        playerAdvancementsStringMap.put("advancements.adventure.whos_the_pillager_now.title", ADVENTURE_ADVANCEMENT_WHOS_THE_PILLAGER_NOW);
        playerAdvancementsStringMap.put("advancements.adventure.two_birds_one_arrow.title", ADVENTURE_ADVANCEMENT_TWO_BIRDS_ONE_ARROW);
        playerAdvancementsStringMap.put("advancements.adventure.arbalistic.title", ADVENTURE_ADVANCEMENT_ARBALISTIC);
        playerAdvancementsStringMap.put("advancements.adventure.voluntary_exile.title", ADVENTURE_ADVANCEMENT_VOLUNTARY_EXILE);
        playerAdvancementsStringMap.put("advancements.adventure.hero_of_the_village.title", ADVENTURE_ADVANCEMENT_HERO_OF_VILLAGE);
        playerAdvancementsStringMap.put("advancements.adventure.honey_block_slide.title", ADVENTURE_ADVANCEMENT_STICKY_SITUATION);
        playerAdvancementsStringMap.put("advancements.adventure.bullseye.title", ADVENTURE_ADVANCEMENT_BULLSEYE);
        playerAdvancementsStringMap.put("advancements.adventure.walk_on_powder_snow_with_leather_boots.title", ADVENTURE_ADVANCEMENT_LIGHT_AS_RABBIT);
        playerAdvancementsStringMap.put("advancements.adventure.lightning_rod_with_villager_no_fire.title", ADVENTURE_ADVANCEMENT_SURGE_PROTECTOR);
        playerAdvancementsStringMap.put("advancements.adventure.spyglass_at_parrot.title", ADVENTURE_ADVANCEMENT_IS_IT_A_BIRD);
        playerAdvancementsStringMap.put("advancements.adventure.spyglass_at_ghast.title", ADVENTURE_ADVANCEMENT_IS_IT_A_BALLOON);
        playerAdvancementsStringMap.put("advancements.adventure.play_jukebox_in_meadows.title", ADVENTURE_ADVANCEMENT_SOUND_OF_MUSIC);
        playerAdvancementsStringMap.put("advancements.adventure.spyglass_at_dragon.title", ADVENTURE_ADVANCEMENT_IS_IT_A_PLANE);
        playerAdvancementsStringMap.put("advancements.adventure.fall_from_world_height.title", ADVENTURE_ADVANCEMENT_CAVES_AND_CLIFFS);
        playerAdvancementsStringMap.put("advancements.adventure.kill_mob_near_sculk_catalyst.title", ADVENTURE_ADVANCEMENT_IT_SPREADS);
        playerAdvancementsStringMap.put("advancements.adventure.avoid_vibration.title", ADVENTURE_ADVANCEMENT_SNEAK_100);
        playerAdvancementsStringMap.put("advancements.husbandry.root.title", HUSBANDRY_ADVANCEMENT_HUSBANDRY);
        playerAdvancementsStringMap.put("advancements.husbandry.plant_seed.title", HUSBANDRY_ADVANCEMENT_SEEDY_PLACE);
        playerAdvancementsStringMap.put("advancements.husbandry.breed_an_animal.title", HUSBANDRY_ADVANCEMENT_PARROTS_AND_BATS);
        playerAdvancementsStringMap.put("advancements.husbandry.balanced_diet.title", HUSBANDRY_ADVANCEMENT_BALANCED_DIET);
        playerAdvancementsStringMap.put("advancements.husbandry.netherite_hoe.title", HUSBANDRY_ADVANCEMENT_SERIOUS_DEDICATION);
        playerAdvancementsStringMap.put("advancements.husbandry.tame_an_animal.title", HUSBANDRY_ADVANCEMENT_BEST_FRIENDS);
        playerAdvancementsStringMap.put("advancements.husbandry.breed_all_animals.title", HUSBANDRY_ADVANCEMENT_TWO_BY_TWO);
        playerAdvancementsStringMap.put("advancements.husbandry.fishy_business.title", HUSBANDRY_ADVANCEMENT_FISHY_BUSINESS);
        playerAdvancementsStringMap.put("advancements.husbandry.tactical_fishing.title", HUSBANDRY_ADVANCEMENT_TACTICAL_FISHING);
        playerAdvancementsStringMap.put("advancements.husbandry.axolotl_in_a_bucket.title", HUSBANDRY_ADVANCEMENT_CUTEST_PREDATOR);
        playerAdvancementsStringMap.put("advancements.husbandry.kill_axolotl_target.title", HUSBANDRY_ADVANCEMENT_HEALING_FRIENDSHIP);
        playerAdvancementsStringMap.put("advancements.husbandry.complete_catalogue.title", HUSBANDRY_ADVANCEMENT_COMPLETE_CATALOGUE);
        playerAdvancementsStringMap.put("advancements.husbandry.safely_harvest_honey.title", HUSBANDRY_ADVANCEMENT_BEE_OUR_GUEST);
        playerAdvancementsStringMap.put("advancements.husbandry.wax_on.title", HUSBANDRY_ADVANCEMENT_WAX_ON);
        playerAdvancementsStringMap.put("advancements.husbandry.wax_off.title", HUSBANDRY_ADVANCEMENT_WAX_OFF);
        playerAdvancementsStringMap.put("advancements.husbandry.tadpole_in_a_bucket.title", HUSBANDRY_ADVANCEMENT_BUKKIT);
        playerAdvancementsStringMap.put("advancements.husbandry.leash_all_frog_variants.title", HUSBANDRY_ADVANCEMENT_SQUAD_HOPS_INTO_TOWN);
        playerAdvancementsStringMap.put("advancements.husbandry.froglights.title", HUSBANDRY_ADVANCEMENT_POWERS_COMBINED);
        playerAdvancementsStringMap.put("advancements.husbandry.silk_touch_nest.title", HUSBANDRY_ADVANCEMENT_BEELOCATION);
        playerAdvancementsStringMap.put("advancements.husbandry.ride_a_boat_with_a_goat.title", HUSBANDRY_ADVANCEMENT_FLOATS_YOUR_GOAT);
        playerAdvancementsStringMap.put("advancements.husbandry.make_a_sign_glow.title", HUSBANDRY_ADVANCEMENT_GLOW_AND_BEHOLD);
        playerAdvancementsStringMap.put("advancements.husbandry.allay_deliver_item_to_player.title", HUSBANDRY_ADVANCEMENT_FRIEND_IN_ME);
        playerAdvancementsStringMap.put("advancements.husbandry.allay_deliver_cake_to_note_block.title", HUSBANDRY_ADVANCEMENT_BIRTHDAY_SONG);
        playerAdvancementsStringMap.put("advancements.nether.root.title", NETHER_ADVANCEMENT_NETHER);
        playerAdvancementsStringMap.put("advancements.nether.return_to_sender.title", NETHER_ADVANCEMENT_RETURN_TO_SENDER);
        playerAdvancementsStringMap.put("advancements.nether.find_fortress.title", NETHER_ADVANCEMENT_TERRIBLE_FORTRESS);
        playerAdvancementsStringMap.put("advancements.nether.fast_travel.title", NETHER_ADVANCEMENT_SUBSPACE_BUBBLE);
        playerAdvancementsStringMap.put("advancements.nether.uneasy_alliance.title", NETHER_ADVANCEMENT_UNEASY_ALLIANCE);
        playerAdvancementsStringMap.put("advancements.nether.get_wither_skull.title", NETHER_ADVANCEMENT_SPOOKY_SCARY_SKELETON);
        playerAdvancementsStringMap.put("advancements.nether.summon_wither.title", NETHER_ADVANCEMENT_WITHERING_HEIGHTS);
        playerAdvancementsStringMap.put("advancements.nether.obtain_blaze_rod.title", NETHER_ADVANCEMENT_INTO_FIRE);
        playerAdvancementsStringMap.put("advancements.nether.create_beacon.title", NETHER_ADVANCEMENT_BRING_HOME_BEACON);
        playerAdvancementsStringMap.put("advancements.nether.create_full_beacon.title", NETHER_ADVANCEMENT_BEACONATOR);
        playerAdvancementsStringMap.put("advancements.nether.brew_potion.title", NETHER_ADVANCEMENT_LOCAL_BREWERY);
        playerAdvancementsStringMap.put("advancements.nether.all_potions.title", NETHER_ADVANCEMENT_FURIOUS_COCKTAIL);
        playerAdvancementsStringMap.put("advancements.nether.all_effects.title", NETHER_ADVANCEMENT_HOW_DID_WE_GET_HERE);
        playerAdvancementsStringMap.put("advancements.nether.obtain_ancient_debris.title", NETHER_ADVANCEMENT_HIDDEN_IN_DEPTHS);
        playerAdvancementsStringMap.put("advancements.nether.netherite_armor.title", NETHER_ADVANCEMENT_COVER_IN_DEBRIS);
        playerAdvancementsStringMap.put("advancements.nether.use_lodestone.title", NETHER_ADVANCEMENT_COUNTRY_LODE);
        playerAdvancementsStringMap.put("advancements.nether.obtain_crying_obsidian.title", NETHER_ADVANCEMENT_CUTTING_ONIONS);
        playerAdvancementsStringMap.put("advancements.nether.charge_respawn_anchor.title", NETHER_ADVANCEMENT_NOT_QUITE_NINE_LIVES);
        playerAdvancementsStringMap.put("advancements.nether.ride_strider.title", NETHER_ADVANCEMENT_BOAT_HAS_LEGS);
        playerAdvancementsStringMap.put("advancements.nether.ride_strider_in_overworld_lava.title", NETHER_ADVANCEMENT_FEELS_LIKE_HOME);
        playerAdvancementsStringMap.put("advancements.nether.explore_nether.title", NETHER_ADVANCEMENT_HOT_TOURIST_DESTINATIONS);
        playerAdvancementsStringMap.put("advancements.nether.find_bastion.title", NETHER_ADVANCEMENT_THOSE_WERE_THE_DAYS);
        playerAdvancementsStringMap.put("advancements.nether.loot_bastion.title", NETHER_ADVANCEMENT_WAR_PIGS);
        playerAdvancementsStringMap.put("advancements.nether.distract_piglin.title", NETHER_ADVANCEMENT_OH_SHINY);
        playerAdvancementsStringMap.put("advancements.story.root.title", STORY_ADVANCEMENT_MINECRAFT);
        playerAdvancementsStringMap.put("advancements.story.mine_stone.title", STORY_ADVANCEMENT_STONE_AGE);
        playerAdvancementsStringMap.put("advancements.story.upgrade_tools.title", STORY_ADVANCEMENT_GETTING_UPGRADE);
        playerAdvancementsStringMap.put("advancements.story.smelt_iron.title", STORY_ADVANCEMENT_ACQUIRE_HARDWARE);
        playerAdvancementsStringMap.put("advancements.story.iron_tools.title", STORY_ADVANCEMENT_IRON_PICK);
        playerAdvancementsStringMap.put("advancements.story.mine_diamond.title", STORY_ADVANCEMENT_DIAMONDS);
        playerAdvancementsStringMap.put("advancements.story.lava_bucket.title", STORY_ADVANCEMENT_HOT_STUFF);
        playerAdvancementsStringMap.put("advancements.story.obtain_armor.title", STORY_ADVANCEMENT_SUIT_UP);
        playerAdvancementsStringMap.put("advancements.story.enchant_item.title", STORY_ADVANCEMENT_ENCHANTER);
        playerAdvancementsStringMap.put("advancements.story.form_obsidian.title", STORY_ADVANCEMENT_ICE_BUCKET_CHALLENGE);
        playerAdvancementsStringMap.put("advancements.story.deflect_arrow.title", STORY_ADVANCEMENT_NOT_TODAY_THANKS);
        playerAdvancementsStringMap.put("advancements.story.shiny_gear.title", STORY_ADVANCEMENT_COVER_WITH_DIAMONDS);
        playerAdvancementsStringMap.put("advancements.story.enter_the_nether.title", STORY_ADVANCEMENT_GO_DEEPER);
        playerAdvancementsStringMap.put("advancements.story.cure_zombie_villager.title", STORY_ADVANCEMENT_ZOMBIE_DOCTOR);
        playerAdvancementsStringMap.put("advancements.story.follow_ender_eye.title", STORY_ADVANCEMENT_EYE_SPY);
        playerAdvancementsStringMap.put("advancements.story.enter_the_end.title", THE_END_ADVANCEMENT_THE_END);
        playerAdvancementsStringMap.put("advancements.end.root.title", THE_END_ADVANCEMENT_THE_END);
        playerAdvancementsStringMap.put("advancements.end.kill_dragon.title", THE_END_ADVANCEMENT_FREE_THE_END);
        playerAdvancementsStringMap.put("advancements.end.enter_end_gateway.title", THE_END_ADVANCEMENT_REMOTE_GETAWAY);
        playerAdvancementsStringMap.put("advancements.end.respawn_dragon.title", THE_END_ADVANCEMENT_END_AGAIN);
        playerAdvancementsStringMap.put("advancements.end.find_end_city.title", THE_END_ADVANCEMENT_CITY_AT_END);
        playerAdvancementsStringMap.put("advancements.end.dragon_breath.title", THE_END_ADVANCEMENT_YOU_NEED_MINT);
        playerAdvancementsStringMap.put("advancements.end.levitate.title", THE_END_ADVANCEMENT_GREAT_VIEW);
        playerAdvancementsStringMap.put("advancements.end.elytra.title", THE_END_ADVANCEMENT_SKY_IS_LIMIT);
        playerAdvancementsStringMap.put("advancements.end.dragon_egg.title", THE_END_ADVANCEMENT_NEXT_GENERATION);

        abstractCauldronBlockItemMap.put(Items.LAVA_BUCKET, FILLING_CAULDRONS);
        abstractCauldronBlockItemMap.put(Items.WATER_BUCKET, FILLING_CAULDRONS);
        abstractCauldronBlockItemMap.put(Items.POWDER_SNOW_BUCKET, FILLING_CAULDRONS);
        abstractCauldronBlockItemMap.put(Items.POTION, FILLING_CAULDRONS);
        abstractCauldronBlockItemMap.put(Items.BUCKET, EMPTYING_CAULDRONS);
        abstractCauldronBlockItemMap.put(Items.GLASS_BOTTLE, EMPTYING_CAULDRONS);
        abstractCauldronBlockItemMap.put(Items.LEATHER_BOOTS, CAULDRONS_CLEAN_LEATHER_ARMOUR);
        abstractCauldronBlockItemMap.put(Items.LEATHER_LEGGINGS, CAULDRONS_CLEAN_LEATHER_ARMOUR);
        abstractCauldronBlockItemMap.put(Items.LEATHER_CHESTPLATE, CAULDRONS_CLEAN_LEATHER_ARMOUR);
        abstractCauldronBlockItemMap.put(Items.LEATHER_HELMET, CAULDRONS_CLEAN_LEATHER_ARMOUR);
        abstractCauldronBlockItemMap.put(Items.LEATHER_HORSE_ARMOR, CAULDRONS_CLEAN_LEATHER_ARMOUR);
        abstractCauldronBlockItemMap.put(Items.WHITE_BANNER, CAULDRONS_CLEAN_BANNERS);
        abstractCauldronBlockItemMap.put(Items.GRAY_BANNER, CAULDRONS_CLEAN_BANNERS);
        abstractCauldronBlockItemMap.put(Items.BLACK_BANNER, CAULDRONS_CLEAN_BANNERS);
        abstractCauldronBlockItemMap.put(Items.BLUE_BANNER, CAULDRONS_CLEAN_BANNERS);
        abstractCauldronBlockItemMap.put(Items.BROWN_BANNER, CAULDRONS_CLEAN_BANNERS);
        abstractCauldronBlockItemMap.put(Items.CYAN_BANNER, CAULDRONS_CLEAN_BANNERS);
        abstractCauldronBlockItemMap.put(Items.GREEN_BANNER, CAULDRONS_CLEAN_BANNERS);
        abstractCauldronBlockItemMap.put(Items.LIGHT_BLUE_BANNER, CAULDRONS_CLEAN_BANNERS);
        abstractCauldronBlockItemMap.put(Items.LIGHT_GRAY_BANNER, CAULDRONS_CLEAN_BANNERS);
        abstractCauldronBlockItemMap.put(Items.LIME_BANNER, CAULDRONS_CLEAN_BANNERS);
        abstractCauldronBlockItemMap.put(Items.MAGENTA_BANNER, CAULDRONS_CLEAN_BANNERS);
        abstractCauldronBlockItemMap.put(Items.ORANGE_BANNER, CAULDRONS_CLEAN_BANNERS);
        abstractCauldronBlockItemMap.put(Items.PINK_BANNER, CAULDRONS_CLEAN_BANNERS);
        abstractCauldronBlockItemMap.put(Items.PURPLE_BANNER, CAULDRONS_CLEAN_BANNERS);
        abstractCauldronBlockItemMap.put(Items.RED_BANNER, CAULDRONS_CLEAN_BANNERS);
        abstractCauldronBlockItemMap.put(Items.YELLOW_BANNER, CAULDRONS_CLEAN_BANNERS);
        abstractCauldronBlockItemMap.put(Items.WHITE_SHULKER_BOX, CAULDRONS_CLEAN_SHULKER_BOXES);
        abstractCauldronBlockItemMap.put(Items.GRAY_SHULKER_BOX, CAULDRONS_CLEAN_SHULKER_BOXES);
        abstractCauldronBlockItemMap.put(Items.BLACK_SHULKER_BOX, CAULDRONS_CLEAN_SHULKER_BOXES);
        abstractCauldronBlockItemMap.put(Items.BLUE_SHULKER_BOX, CAULDRONS_CLEAN_SHULKER_BOXES);
        abstractCauldronBlockItemMap.put(Items.BROWN_SHULKER_BOX, CAULDRONS_CLEAN_SHULKER_BOXES);
        abstractCauldronBlockItemMap.put(Items.CYAN_SHULKER_BOX, CAULDRONS_CLEAN_SHULKER_BOXES);
        abstractCauldronBlockItemMap.put(Items.GREEN_SHULKER_BOX, CAULDRONS_CLEAN_SHULKER_BOXES);
        abstractCauldronBlockItemMap.put(Items.LIGHT_BLUE_SHULKER_BOX, CAULDRONS_CLEAN_SHULKER_BOXES);
        abstractCauldronBlockItemMap.put(Items.LIGHT_GRAY_SHULKER_BOX, CAULDRONS_CLEAN_SHULKER_BOXES);
        abstractCauldronBlockItemMap.put(Items.LIME_SHULKER_BOX, CAULDRONS_CLEAN_SHULKER_BOXES);
        abstractCauldronBlockItemMap.put(Items.MAGENTA_SHULKER_BOX, CAULDRONS_CLEAN_SHULKER_BOXES);
        abstractCauldronBlockItemMap.put(Items.ORANGE_SHULKER_BOX, CAULDRONS_CLEAN_SHULKER_BOXES);
        abstractCauldronBlockItemMap.put(Items.PINK_SHULKER_BOX, CAULDRONS_CLEAN_SHULKER_BOXES);
        abstractCauldronBlockItemMap.put(Items.PURPLE_SHULKER_BOX, CAULDRONS_CLEAN_SHULKER_BOXES);
        abstractCauldronBlockItemMap.put(Items.RED_SHULKER_BOX, CAULDRONS_CLEAN_SHULKER_BOXES);
        abstractCauldronBlockItemMap.put(Items.YELLOW_SHULKER_BOX, CAULDRONS_CLEAN_SHULKER_BOXES);

        fallingBlockBlockMap.put(Blocks.DRAGON_EGG, DRAGON_EGGS_FALL);
        fallingBlockBlockMap.put(Blocks.ANVIL, ANVILS_FALL);
        fallingBlockBlockMap.put(Blocks.BLACK_CONCRETE_POWDER, CONCRETE_POWDER_FALLS);
        fallingBlockBlockMap.put(Blocks.BLUE_CONCRETE_POWDER, CONCRETE_POWDER_FALLS);
        fallingBlockBlockMap.put(Blocks.BROWN_CONCRETE_POWDER, CONCRETE_POWDER_FALLS);
        fallingBlockBlockMap.put(Blocks.GRAY_CONCRETE_POWDER, CONCRETE_POWDER_FALLS);
        fallingBlockBlockMap.put(Blocks.GREEN_CONCRETE_POWDER, CONCRETE_POWDER_FALLS);
        fallingBlockBlockMap.put(Blocks.CYAN_CONCRETE_POWDER, CONCRETE_POWDER_FALLS);
        fallingBlockBlockMap.put(Blocks.LIGHT_BLUE_CONCRETE_POWDER, CONCRETE_POWDER_FALLS);
        fallingBlockBlockMap.put(Blocks.LIGHT_GRAY_CONCRETE_POWDER, CONCRETE_POWDER_FALLS);
        fallingBlockBlockMap.put(Blocks.LIME_CONCRETE_POWDER, CONCRETE_POWDER_FALLS);
        fallingBlockBlockMap.put(Blocks.MAGENTA_CONCRETE_POWDER, CONCRETE_POWDER_FALLS);
        fallingBlockBlockMap.put(Blocks.ORANGE_CONCRETE_POWDER, CONCRETE_POWDER_FALLS);
        fallingBlockBlockMap.put(Blocks.PINK_CONCRETE_POWDER, CONCRETE_POWDER_FALLS);
        fallingBlockBlockMap.put(Blocks.PURPLE_CONCRETE_POWDER, CONCRETE_POWDER_FALLS);
        fallingBlockBlockMap.put(Blocks.RED_CONCRETE_POWDER, CONCRETE_POWDER_FALLS);
        fallingBlockBlockMap.put(Blocks.WHITE_CONCRETE_POWDER, CONCRETE_POWDER_FALLS);
        fallingBlockBlockMap.put(Blocks.YELLOW_CONCRETE_POWDER, CONCRETE_POWDER_FALLS);
        fallingBlockBlockMap.put(Blocks.GRAVEL, GRAVEL_FALLS);
        fallingBlockBlockMap.put(Blocks.SAND, SAND_FALLS);
        fallingBlockBlockMap.put(Blocks.RED_SAND, SAND_FALLS);

        paintingHolderPaintingVariantMap.put(Registry.PAINTING_VARIANT.getHolderOrThrow(PaintingVariants.ALBAN), ALBAN_PAINTING);
        paintingHolderPaintingVariantMap.put(Registry.PAINTING_VARIANT.getHolderOrThrow(PaintingVariants.AZTEC2), AZTEC2_PAINTING);
        paintingHolderPaintingVariantMap.put(Registry.PAINTING_VARIANT.getHolderOrThrow(PaintingVariants.AZTEC), AZTEC_PAINTING);
        paintingHolderPaintingVariantMap.put(Registry.PAINTING_VARIANT.getHolderOrThrow(PaintingVariants.BOMB), BOMB_PAINTING);
        paintingHolderPaintingVariantMap.put(Registry.PAINTING_VARIANT.getHolderOrThrow(PaintingVariants.BURNING_SKULL), BURNING_SKULL_PAINTING);
        paintingHolderPaintingVariantMap.put(Registry.PAINTING_VARIANT.getHolderOrThrow(PaintingVariants.BUST), BUST_PAINTING);
        paintingHolderPaintingVariantMap.put(Registry.PAINTING_VARIANT.getHolderOrThrow(PaintingVariants.COURBET), COURBET_PAINTING);
        paintingHolderPaintingVariantMap.put(Registry.PAINTING_VARIANT.getHolderOrThrow(PaintingVariants.CREEBET), CREEBET_PAINTING);
        paintingHolderPaintingVariantMap.put(Registry.PAINTING_VARIANT.getHolderOrThrow(PaintingVariants.DONKEY_KONG), DONKEY_KONG_PAINTING);
        paintingHolderPaintingVariantMap.put(Registry.PAINTING_VARIANT.getHolderOrThrow(PaintingVariants.EARTH), EARTH_PAINTING);
        paintingHolderPaintingVariantMap.put(Registry.PAINTING_VARIANT.getHolderOrThrow(PaintingVariants.FIGHTERS), FIGHTERS_PAINTING);
        paintingHolderPaintingVariantMap.put(Registry.PAINTING_VARIANT.getHolderOrThrow(PaintingVariants.FIRE), FIRE_PAINTING);
        paintingHolderPaintingVariantMap.put(Registry.PAINTING_VARIANT.getHolderOrThrow(PaintingVariants.GRAHAM), GRAHAM_PAINTING);
        paintingHolderPaintingVariantMap.put(Registry.PAINTING_VARIANT.getHolderOrThrow(PaintingVariants.KEBAB), KEBAB_PAINTING);
        paintingHolderPaintingVariantMap.put(Registry.PAINTING_VARIANT.getHolderOrThrow(PaintingVariants.MATCH), MATCH_PAINTING);
        paintingHolderPaintingVariantMap.put(Registry.PAINTING_VARIANT.getHolderOrThrow(PaintingVariants.PIGSCENE), PIGSCENE_PAINTING);
        paintingHolderPaintingVariantMap.put(Registry.PAINTING_VARIANT.getHolderOrThrow(PaintingVariants.PLANT), PLANT_PAINTING);
        paintingHolderPaintingVariantMap.put(Registry.PAINTING_VARIANT.getHolderOrThrow(PaintingVariants.POINTER), POINTER_PAINTING);
        paintingHolderPaintingVariantMap.put(Registry.PAINTING_VARIANT.getHolderOrThrow(PaintingVariants.POOL), POOL_PAINTING);
        paintingHolderPaintingVariantMap.put(Registry.PAINTING_VARIANT.getHolderOrThrow(PaintingVariants.SEA), SEA_PAINTING);
        paintingHolderPaintingVariantMap.put(Registry.PAINTING_VARIANT.getHolderOrThrow(PaintingVariants.SKELETON), SKELETON_PAINTING);
        paintingHolderPaintingVariantMap.put(Registry.PAINTING_VARIANT.getHolderOrThrow(PaintingVariants.SKULL_AND_ROSES), SKULL_AND_ROSES_PAINTING);
        paintingHolderPaintingVariantMap.put(Registry.PAINTING_VARIANT.getHolderOrThrow(PaintingVariants.STAGE), STAGE_PAINTING);
        paintingHolderPaintingVariantMap.put(Registry.PAINTING_VARIANT.getHolderOrThrow(PaintingVariants.SUNSET), SUNSET_PAINTING);
        paintingHolderPaintingVariantMap.put(Registry.PAINTING_VARIANT.getHolderOrThrow(PaintingVariants.VOID), VOID_PAINTING);
        paintingHolderPaintingVariantMap.put(Registry.PAINTING_VARIANT.getHolderOrThrow(PaintingVariants.WANDERER), WANDERER_PAINTING);
        paintingHolderPaintingVariantMap.put(Registry.PAINTING_VARIANT.getHolderOrThrow(PaintingVariants.WASTELAND), WASTELAND_PAINTING);
        paintingHolderPaintingVariantMap.put(Registry.PAINTING_VARIANT.getHolderOrThrow(PaintingVariants.WATER), WATER_PAINTING);
        paintingHolderPaintingVariantMap.put(Registry.PAINTING_VARIANT.getHolderOrThrow(PaintingVariants.WIND), WIND_PAINTING);
        paintingHolderPaintingVariantMap.put(Registry.PAINTING_VARIANT.getHolderOrThrow(PaintingVariants.WITHER), WITHER_PAINTING);

        villagerDataVillagerTypeMap.put(VillagerType.DESERT, DESERT_VILLAGER_TYPE);
        villagerDataVillagerTypeMap.put(VillagerType.JUNGLE, JUNGLE_VILLAGER_TYPE);
        villagerDataVillagerTypeMap.put(VillagerType.SAVANNA, SAVANNA_VILLAGER_TYPE);
        villagerDataVillagerTypeMap.put(VillagerType.SNOW, SNOW_VILLAGER_TYPE);
        villagerDataVillagerTypeMap.put(VillagerType.SWAMP, SWAMP_VILLAGER_TYPE);
        villagerDataVillagerTypeMap.put(VillagerType.TAIGA, TAIGA_VILLAGER_TYPE);

        villagerDataVillagerProfessionMap.put(VillagerProfession.ARMORER, ARMOURER_VILLAGER_PROFESSION);
        villagerDataVillagerProfessionMap.put(VillagerProfession.BUTCHER, BUTCHER_VILLAGER_PROFESSION);
        villagerDataVillagerProfessionMap.put(VillagerProfession.CARTOGRAPHER, CARTOGRAPHER_VILLAGER_PROFESSION);
        villagerDataVillagerProfessionMap.put(VillagerProfession.CLERIC, CLERIC_VILLAGER_PROFESSION);
        villagerDataVillagerProfessionMap.put(VillagerProfession.FARMER, FARMER_VILLAGER_PROFESSION);
        villagerDataVillagerProfessionMap.put(VillagerProfession.FISHERMAN, FISHERMAN_VILLAGER_PROFESSION);
        villagerDataVillagerProfessionMap.put(VillagerProfession.FLETCHER, FLETCHER_VILLAGER_PROFESSION);
        villagerDataVillagerProfessionMap.put(VillagerProfession.LEATHERWORKER, LEATHERWORKER_VILLAGER_PROFESSION);
        villagerDataVillagerProfessionMap.put(VillagerProfession.LIBRARIAN, LIBRARIAN_VILLAGER_PROFESSION);
        villagerDataVillagerProfessionMap.put(VillagerProfession.MASON, MASON_VILLAGER_PROFESSION);
        villagerDataVillagerProfessionMap.put(VillagerProfession.SHEPHERD, SHEPHERD_VILLAGER_PROFESSION);
        villagerDataVillagerProfessionMap.put(VillagerProfession.TOOLSMITH, TOOLSMITH_VILLAGER_PROFESSION);
        villagerDataVillagerProfessionMap.put(VillagerProfession.WEAPONSMITH, WEAPONSMITH_VILLAGER_PROFESSION);

        blockStateBaseBlockMap.put(Blocks.ANVIL, ANVIL_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.CHIPPED_ANVIL, ANVIL_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.DAMAGED_ANVIL, ANVIL_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.BARREL, BARREL_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.BEACON, BEACON_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.BLACK_BED, BED_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.BLUE_BED, BED_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.BROWN_BED, BED_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.CYAN_BED, BED_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.GRAY_BED, BED_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.GREEN_BED, BED_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.LIGHT_BLUE_BED, BED_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.LIGHT_GRAY_BED, BED_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.LIME_BED, BED_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.MAGENTA_BED, BED_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.ORANGE_BED, BED_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.PINK_BED, BED_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.PURPLE_BED, BED_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.RED_BED, BED_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.WHITE_BED, BED_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.YELLOW_BED, BED_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.BELL, BELL_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.BLAST_FURNACE, BLAST_FURNACE_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.BREWING_STAND, BREWING_STAND_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.ACACIA_BUTTON, BUTTON_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.BIRCH_BUTTON, BUTTON_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.CRIMSON_BUTTON, BUTTON_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.JUNGLE_BUTTON, BUTTON_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.OAK_BUTTON, BUTTON_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.DARK_OAK_BUTTON, BUTTON_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.MANGROVE_BUTTON, BUTTON_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.POLISHED_BLACKSTONE_BUTTON, BUTTON_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.SPRUCE_BUTTON, BUTTON_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.STONE_BUTTON, BUTTON_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.WARPED_BUTTON, BUTTON_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.CAKE, CAKE_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.CAMPFIRE, CAMPFIRE_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.CARTOGRAPHY_TABLE, CARTOGRAPHY_TABLE_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.CHEST, CHEST_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.TRAPPED_CHEST, CHEST_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.COMMAND_BLOCK, COMMAND_BLOCK_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.CRAFTING_TABLE, CRAFTING_TABLE_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.DISPENSER, DISPENSER_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.ACACIA_DOOR, DOOR_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.BIRCH_DOOR, DOOR_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.CRIMSON_DOOR, DOOR_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.JUNGLE_DOOR, DOOR_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.OAK_DOOR, DOOR_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.DARK_OAK_DOOR, DOOR_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.MANGROVE_DOOR, DOOR_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.SPRUCE_DOOR, DOOR_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.WARPED_DOOR, DOOR_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.DRAGON_EGG, DRAGON_EGG_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.DROPPER, DROPPER_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.ENDER_CHEST, ENDER_CHEST_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.FURNACE, FURNACE_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.GRINDSTONE, GRINDSTONE_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.HOPPER, HOPPER_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.JIGSAW, JIGSAW_BLOCK_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.JUKEBOX, JUKEBOX_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.LECTERN, LECTERN_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.LOOM, LOOM_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.NOTE_BLOCK, NOTEBLOCK_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.SHULKER_BOX, SHULKER_BOX_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.SMITHING_TABLE, SMITHING_TABLE_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.SMOKER, SMOKER_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.STONECUTTER, STONECUTTER_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.STRUCTURE_BLOCK, STRUCTURE_BLOCK_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.ACACIA_TRAPDOOR, TRAPDOOR_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.BIRCH_TRAPDOOR, TRAPDOOR_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.CRIMSON_TRAPDOOR, TRAPDOOR_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.JUNGLE_TRAPDOOR, TRAPDOOR_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.OAK_TRAPDOOR, TRAPDOOR_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.DARK_OAK_TRAPDOOR, TRAPDOOR_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.MANGROVE_TRAPDOOR, TRAPDOOR_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.SPRUCE_TRAPDOOR, TRAPDOOR_INTERACTIONS);
        blockStateBaseBlockMap.put(Blocks.WARPED_TRAPDOOR, TRAPDOOR_INTERACTIONS);

        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.FROST_WALKER, Enchantments.DEPTH_STRIDER), BOOT_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.INFINITY_ARROWS, Enchantments.MENDING), BOW_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.MULTISHOT, Enchantments.PIERCING), CROSSBOW_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.SHARPNESS, Enchantments.SMITE), DAMAGE_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.SHARPNESS, Enchantments.BANE_OF_ARTHROPODS), DAMAGE_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.SMITE, Enchantments.BANE_OF_ARTHROPODS), DAMAGE_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.BLOCK_FORTUNE, Enchantments.SILK_TOUCH), MINING_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.ALL_DAMAGE_PROTECTION, Enchantments.BLAST_PROTECTION), PROTECTION_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.ALL_DAMAGE_PROTECTION, Enchantments.PROJECTILE_PROTECTION), PROTECTION_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.ALL_DAMAGE_PROTECTION, Enchantments.FALL_PROTECTION), PROTECTION_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.ALL_DAMAGE_PROTECTION, Enchantments.FIRE_PROTECTION), PROTECTION_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.BLAST_PROTECTION, Enchantments.PROJECTILE_PROTECTION), PROTECTION_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.BLAST_PROTECTION, Enchantments.FALL_PROTECTION), PROTECTION_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.BLAST_PROTECTION, Enchantments.FIRE_PROTECTION), PROTECTION_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.PROJECTILE_PROTECTION, Enchantments.FALL_PROTECTION), PROTECTION_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.PROJECTILE_PROTECTION, Enchantments.FIRE_PROTECTION), PROTECTION_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.FALL_PROTECTION, Enchantments.FIRE_PROTECTION), PROTECTION_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.RIPTIDE, Enchantments.LOYALTY), TRIDENT_ENCHANTMENT_CONFLICTS);
        enchantmentPairEnchantmentMap.put(new ObjectObjectImmutablePair<>(Enchantments.RIPTIDE, Enchantments.CHANNELING), TRIDENT_ENCHANTMENT_CONFLICTS);

        blockStateBaseRedstoneBlocksMap.put(Blocks.WARPED_BUTTON, BUTTON_ENABLED);
        blockStateBaseRedstoneBlocksMap.put(Blocks.BIRCH_BUTTON, BUTTON_ENABLED);
        blockStateBaseRedstoneBlocksMap.put(Blocks.STONE_BUTTON, BUTTON_ENABLED);
        blockStateBaseRedstoneBlocksMap.put(Blocks.SPRUCE_BUTTON, BUTTON_ENABLED);
        blockStateBaseRedstoneBlocksMap.put(Blocks.OAK_BUTTON, BUTTON_ENABLED);
        blockStateBaseRedstoneBlocksMap.put(Blocks.POLISHED_BLACKSTONE_BUTTON, BUTTON_ENABLED);
        blockStateBaseRedstoneBlocksMap.put(Blocks.MANGROVE_BUTTON, BUTTON_ENABLED);
        blockStateBaseRedstoneBlocksMap.put(Blocks.DARK_OAK_BUTTON, BUTTON_ENABLED);
        blockStateBaseRedstoneBlocksMap.put(Blocks.JUNGLE_BUTTON, BUTTON_ENABLED);
        blockStateBaseRedstoneBlocksMap.put(Blocks.CRIMSON_BUTTON, BUTTON_ENABLED);
        blockStateBaseRedstoneBlocksMap.put(Blocks.ACACIA_BUTTON, BUTTON_ENABLED);
        blockStateBaseRedstoneBlocksMap.put(Blocks.DAYLIGHT_DETECTOR, DAYLIGHT_SENSOR_ENABLED);
        blockStateBaseRedstoneBlocksMap.put(Blocks.LEVER, LEVER_ENABLED);
        blockStateBaseRedstoneBlocksMap.put(Blocks.LIGHTNING_ROD, LIGHTNING_ROD_ENABLED);
        blockStateBaseRedstoneBlocksMap.put(Blocks.OBSERVER, OBSERVER_ENABLED);
        blockStateBaseRedstoneBlocksMap.put(Blocks.WARPED_PRESSURE_PLATE, PRESSURE_PLATE_ENABLED);
        blockStateBaseRedstoneBlocksMap.put(Blocks.BIRCH_PRESSURE_PLATE, PRESSURE_PLATE_ENABLED);
        blockStateBaseRedstoneBlocksMap.put(Blocks.STONE_PRESSURE_PLATE, PRESSURE_PLATE_ENABLED);
        blockStateBaseRedstoneBlocksMap.put(Blocks.SPRUCE_PRESSURE_PLATE, PRESSURE_PLATE_ENABLED);
        blockStateBaseRedstoneBlocksMap.put(Blocks.OAK_PRESSURE_PLATE, PRESSURE_PLATE_ENABLED);
        blockStateBaseRedstoneBlocksMap.put(Blocks.POLISHED_BLACKSTONE_PRESSURE_PLATE, PRESSURE_PLATE_ENABLED);
        blockStateBaseRedstoneBlocksMap.put(Blocks.MANGROVE_PRESSURE_PLATE, PRESSURE_PLATE_ENABLED);
        blockStateBaseRedstoneBlocksMap.put(Blocks.DARK_OAK_PRESSURE_PLATE, PRESSURE_PLATE_ENABLED);
        blockStateBaseRedstoneBlocksMap.put(Blocks.JUNGLE_PRESSURE_PLATE, PRESSURE_PLATE_ENABLED);
        blockStateBaseRedstoneBlocksMap.put(Blocks.CRIMSON_PRESSURE_PLATE, PRESSURE_PLATE_ENABLED);
        blockStateBaseRedstoneBlocksMap.put(Blocks.ACACIA_PRESSURE_PLATE, PRESSURE_PLATE_ENABLED);
        blockStateBaseRedstoneBlocksMap.put(Blocks.REDSTONE_TORCH, REDSTONE_TORCH_ENABLED);
        blockStateBaseRedstoneBlocksMap.put(Blocks.TARGET, TARGET_BLOCK_ENABLED);
        blockStateBaseRedstoneBlocksMap.put(Blocks.TRAPPED_CHEST, TRAPPED_CHEST_ENABLED);
        blockStateBaseRedstoneBlocksMap.put(Blocks.TRIPWIRE_HOOK, TRIPWIRE_HOOK_ENABLED);

        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.BADLANDS), BADLANDS_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.BAMBOO_JUNGLE), BAMBOO_JUNGLE_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.BEACH), BEACH_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.BIRCH_FOREST), BIRCH_FOREST_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.COLD_OCEAN), COLD_OCEAN_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.DARK_FOREST), DARK_FOREST_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.DEEP_COLD_OCEAN), DEEP_COLD_OCEAN_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.DEEP_DARK), DEEP_DARK_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.DEEP_FROZEN_OCEAN), DEEP_FROZEN_OCEAN_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.DEEP_LUKEWARM_OCEAN), DEEP_LUKEWARM_OCEAN_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.DEEP_OCEAN), DEEP_OCEAN_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.DESERT), DESERT_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.DRIPSTONE_CAVES), DRIPSTONE_CAVES_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.ERODED_BADLANDS), ERODED_BADLANDS_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.FLOWER_FOREST), FLOWER_FOREST_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.FOREST), FOREST_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.FROZEN_OCEAN), FROZEN_OCEAN_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.FROZEN_PEAKS), FROZEN_PEAKS_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.FROZEN_RIVER), FROZEN_RIVER_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.GROVE), GROVE_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.ICE_SPIKES), ICE_SPIKES_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.JAGGED_PEAKS), JAGGED_PEAKS_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.JUNGLE), JUNGLE_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.LUKEWARM_OCEAN), LUKEWARM_OCEAN_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.LUSH_CAVES), LUSH_CAVES_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.MANGROVE_SWAMP), MANGROVE_SWAMP_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.MEADOW), MEADOW_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.MUSHROOM_FIELDS), MUSHROOM_FIELDS_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.OCEAN), OCEAN_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.OLD_GROWTH_BIRCH_FOREST), OLD_GROWTH_BIRCH_FOREST_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.OLD_GROWTH_PINE_TAIGA), OLD_GROWTH_PINE_TAIGA_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.OLD_GROWTH_SPRUCE_TAIGA), OLD_GROWTH_SPRUCE_TAIGA_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.RIVER), RIVER_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.SAVANNA), SAVANNA_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.SAVANNA_PLATEAU), SAVANNA_PLATEAU_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.SNOWY_BEACH), SNOWY_BEACH_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.SNOWY_PLAINS), SNOWY_PLAINS_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.SNOWY_SLOPES), SNOWY_SLOPES_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.SNOWY_TAIGA), SNOWY_TAIGA_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.SPARSE_JUNGLE), SPARSE_JUNGLE_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.STONY_PEAKS), STONY_PEAKS_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.STONY_SHORE), STONY_SHORE_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.SUNFLOWER_PLAINS), SUNFLOWER_PLAINS_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.SWAMP), SWAMP_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.TAIGA), TAIGA_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.WARM_OCEAN), WARM_OCEAN_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.WINDSWEPT_FOREST), WINDSWEPT_FOREST_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.WINDSWEPT_GRAVELLY_HILLS), WINDSWEPT_GRAVELLY_HILLS_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.WINDSWEPT_HILLS), WINDSWEPT_HILLS_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.WINDSWEPT_SAVANNA), WINDSWEPT_SAVANNA_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.WOODED_BADLANDS), WOODED_BADLANDS_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.BASALT_DELTAS), BASALT_DELTAS_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.CRIMSON_FOREST), CRIMSON_FOREST_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.SOUL_SAND_VALLEY), SOUL_SAND_VALLEY_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.WARPED_FOREST), WARPED_FOREST_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.END_BARRENS), END_BARRENS_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.END_HIGHLANDS), END_HIGHLANDS_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.END_MIDLANDS), END_MIDLANDS_BIOME);
        biomeSourceBiomeHolderMap.put(BuiltinRegistries.BIOME.getHolderOrThrow(Biomes.SMALL_END_ISLANDS), SMALL_END_ISLANDS_BIOME);

        itemItemMap.put(Items.BOW, BOW_DURABILITY);
        itemItemMap.put(Items.CARROT_ON_A_STICK, CARROT_ON_STICK_DURABILITY);
        itemItemMap.put(Items.CROSSBOW, CROSSBOW_DURABILITY);
        itemItemMap.put(Items.ELYTRA, ELYTRA_DURABILITY);
        itemItemMap.put(Items.FISHING_ROD, FISHING_ROD_DURABILITY);
        itemItemMap.put(Items.FLINT_AND_STEEL, FLINT_AND_STEEL_DURABILITY);
        itemItemMap.put(Items.SHEARS, SHEARS_DURABILITY);
        itemItemMap.put(Items.SHIELD, SHIELD_DURABILITY);
        itemItemMap.put(Items.TRIDENT, TRIDENT_DURABILITY);
        itemItemMap.put(Items.WARPED_FUNGUS_ON_A_STICK, WARPED_FUNGUS_ON_STICK_DURABILITY);
        itemItemMap.put(Items.WOODEN_AXE, WOODEN_TOOL_DURABILITY);
        itemItemMap.put(Items.WOODEN_HOE, WOODEN_TOOL_DURABILITY);
        itemItemMap.put(Items.WOODEN_PICKAXE, WOODEN_TOOL_DURABILITY);
        itemItemMap.put(Items.WOODEN_SHOVEL, WOODEN_TOOL_DURABILITY);
        itemItemMap.put(Items.WOODEN_SWORD, WOODEN_TOOL_DURABILITY);
        itemItemMap.put(Items.STONE_AXE, STONE_TOOL_DURABILITY);
        itemItemMap.put(Items.STONE_HOE, STONE_TOOL_DURABILITY);
        itemItemMap.put(Items.STONE_PICKAXE, STONE_TOOL_DURABILITY);
        itemItemMap.put(Items.STONE_SHOVEL, STONE_TOOL_DURABILITY);
        itemItemMap.put(Items.STONE_SWORD, STONE_TOOL_DURABILITY);
        itemItemMap.put(Items.IRON_AXE, IRON_TOOL_DURABILITY);
        itemItemMap.put(Items.IRON_HOE, IRON_TOOL_DURABILITY);
        itemItemMap.put(Items.IRON_PICKAXE, IRON_TOOL_DURABILITY);
        itemItemMap.put(Items.IRON_SHOVEL, IRON_TOOL_DURABILITY);
        itemItemMap.put(Items.IRON_SWORD, IRON_TOOL_DURABILITY);
        itemItemMap.put(Items.GOLDEN_AXE, GOLDEN_TOOL_DURABILITY);
        itemItemMap.put(Items.GOLDEN_HOE, GOLDEN_TOOL_DURABILITY);
        itemItemMap.put(Items.GOLDEN_PICKAXE, GOLDEN_TOOL_DURABILITY);
        itemItemMap.put(Items.GOLDEN_SHOVEL, GOLDEN_TOOL_DURABILITY);
        itemItemMap.put(Items.GOLDEN_SWORD, GOLDEN_TOOL_DURABILITY);
        itemItemMap.put(Items.DIAMOND_AXE, DIAMOND_TOOL_DURABILITY);
        itemItemMap.put(Items.DIAMOND_HOE, DIAMOND_TOOL_DURABILITY);
        itemItemMap.put(Items.DIAMOND_PICKAXE, DIAMOND_TOOL_DURABILITY);
        itemItemMap.put(Items.DIAMOND_SHOVEL, DIAMOND_TOOL_DURABILITY);
        itemItemMap.put(Items.DIAMOND_SWORD, DIAMOND_TOOL_DURABILITY);
        itemItemMap.put(Items.NETHERITE_AXE, NETHERITE_TOOL_DURABILITY);
        itemItemMap.put(Items.NETHERITE_HOE, NETHERITE_TOOL_DURABILITY);
        itemItemMap.put(Items.NETHERITE_PICKAXE, NETHERITE_TOOL_DURABILITY);
        itemItemMap.put(Items.NETHERITE_SHOVEL, NETHERITE_TOOL_DURABILITY);
        itemItemMap.put(Items.NETHERITE_SWORD, NETHERITE_TOOL_DURABILITY);
        itemItemMap.put(Items.LEATHER_HELMET, LEATHER_HELMET_DURABILITY);
        itemItemMap.put(Items.LEATHER_CHESTPLATE, LEATHER_CHESTPLATE_DURABILITY);
        itemItemMap.put(Items.LEATHER_LEGGINGS, LEATHER_LEGGINGS_DURABILITY);
        itemItemMap.put(Items.LEATHER_BOOTS, LEATHER_BOOTS_DURABILITY);
        itemItemMap.put(Items.CHAINMAIL_HELMET, CHAINMAIL_HELMET_DURABILITY);
        itemItemMap.put(Items.CHAINMAIL_CHESTPLATE, CHAINMAIL_CHESTPLATE_DURABILITY);
        itemItemMap.put(Items.CHAINMAIL_LEGGINGS, CHAINMAIL_LEGGINGS_DURABILITY);
        itemItemMap.put(Items.CHAINMAIL_BOOTS, CHAINMAIL_BOOTS_DURABILITY);
        itemItemMap.put(Items.IRON_HELMET, IRON_HELMET_DURABILITY);
        itemItemMap.put(Items.IRON_CHESTPLATE, IRON_CHESTPLATE_DURABILITY);
        itemItemMap.put(Items.IRON_LEGGINGS, IRON_LEGGINGS_DURABILITY);
        itemItemMap.put(Items.IRON_BOOTS, IRON_BOOTS_DURABILITY);
        itemItemMap.put(Items.GOLDEN_HELMET, GOLDEN_HELMET_DURABILITY);
        itemItemMap.put(Items.GOLDEN_CHESTPLATE, GOLDEN_CHESTPLATE_DURABILITY);
        itemItemMap.put(Items.GOLDEN_LEGGINGS, GOLDEN_LEGGINGS_DURABILITY);
        itemItemMap.put(Items.GOLDEN_BOOTS, GOLDEN_BOOTS_DURABILITY);
        itemItemMap.put(Items.DIAMOND_HELMET, DIAMOND_HELMET_DURABILITY);
        itemItemMap.put(Items.DIAMOND_CHESTPLATE, DIAMOND_CHESTPLATE_DURABILITY);
        itemItemMap.put(Items.DIAMOND_LEGGINGS, DIAMOND_LEGGINGS_DURABILITY);
        itemItemMap.put(Items.DIAMOND_BOOTS, DIAMOND_BOOTS_DURABILITY);
        itemItemMap.put(Items.NETHERITE_HELMET, NETHERITE_HELMET_DURABILITY);
        itemItemMap.put(Items.NETHERITE_CHESTPLATE, NETHERITE_CHESTPLATE_DURABILITY);
        itemItemMap.put(Items.NETHERITE_LEGGINGS, NETHERITE_LEGGINGS_DURABILITY);
        itemItemMap.put(Items.NETHERITE_BOOTS, NETHERITE_BOOTS_DURABILITY);
        itemItemMap.put(Items.TURTLE_HELMET, TURTLE_HELMET_DURABILITY);

        blockStateBaseBlockMapPortals.put(Blocks.NETHER_PORTAL, NETHER_PORTALS_ENABLED);
        blockStateBaseBlockMapPortals.put(Blocks.END_PORTAL, END_PORTALS_ENABLED);
        blockStateBaseBlockMapPortals.put(Blocks.END_GATEWAY, END_GATEWAYS_ENABLED);
    }
}
