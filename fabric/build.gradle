plugins {
    id 'java'
    id 'idea'
    id 'fabric-loom' version '1.4.+'
}
base {
    archivesName = "${mod_id}-fabric-mc${minecraft_version}-${mod_version}"
}
repositories {
    maven { url "https://jitpack.io" }
    maven { url "https://maven.terraformersmc.com/" }
}
dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.layered {
        it.officialMojangMappings()
        it.parchment("org.parchmentmc.data:${project.fabric_parchment_version}@zip")
    }
    modImplementation("net.fabricmc:fabric-loader:${project.fabric_loader_version}")
    include(implementation("com.h2database:h2:${project.h2_version}"))
    modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")
    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
    implementation project(":common")
}
loom {
    accessWidenerPath.set(project(":common").file("src/main/resources/${mod_id}.aw"))
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}
tasks.withType(JavaCompile).configureEach {
    source(project(":common").sourceSets.main.allSource)
}
processResources {
    from project(":common").sourceSets.main.resources
}